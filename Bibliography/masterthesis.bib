
@inproceedings{puck_performance_2021,
	title = {Performance Evaluation of Real-Time {ROS}2 Robotic Control in a Time-Synchronized Distributed Network},
	doi = {10.1109/CASE49439.2021.9551447},
	abstract = {Modern robots are mainly controlled by monolithic black-box controllers provided by the individual manufacturers. In research institutions the first version of the Robot Operating System ({ROS}1) is widely used for different applications. However, {ROS}1 lacks real-time capable communication. The ongoing development of {ROS}2 promises to break this paradigm. By employing Data Distribution Service ({DDS}) as a middleware the modular architecture aims at providing realtime capabilities. This study assesses the current prospects and limitations of {ROS}2. It gains novel insights towards improved and, in particular, reliable results regarding latencies and jitter. To this end, the allocation and transmission of {ROS}2 messages is evaluated in an example application for robotic control. An oscilloscope is applied for external validation of the measurements in such a time-synchronized distributed network. The complete application is set up from non-real-time object detection towards real-time control via {ROS}2 and {EtherCAT}. An in-depth evaluation of the {ROS}2 communication stack on a single host and in distributed setups is included. With real-time safe memory allocation and highly privileged {ROS}2 processes real-time capabilities are ensured.},
	eventtitle = {2021 {IEEE} 17th International Conference on Automation Science and Engineering ({CASE})},
	pages = {1670--1676},
	booktitle = {2021 {IEEE} 17th International Conference on Automation Science and Engineering ({CASE})},
	author = {Puck, L. and Keller, P. and Schnell, T. and Plasberg, C. and Tanev, A. and Heppner, G. and Roennau, A. and Dillmann, R.},
	date = {2021-08},
	note = {{ISSN}: 2161-8089},
	keywords = {Object detection, Operating systems, Oscilloscopes, Particle measurements, Performance evaluation, Real-time systems, Resource management},
	file = {IEEE Xplore Abstract Record:/home/manuelm/Zotero/storage/Z8DYZBR2/stamp.html:text/html;IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/4JMCYIGN/Puck et al. - 2021 - Performance Evaluation of Real-Time ROS2 Robotic C.pdf:application/pdf},
}

@article{liao_introduction_2020,
	title = {Introduction of Robot Operating System 2: {ROS}2},
	url = {https://publica.fraunhofer.de/handle/publica/414153},
	shorttitle = {Introduction of Robot Operating System 2},
	abstract = {In autonomous systems, the increasing complexity of systems poses great changes in maintaining dependability for lifecycle of software engineering. {ROS}2 (Robot Operating System 2), as an appealing prototyping platform, is playing an increasing important role. In this article, I introduce the fundamental characteristics of {ROS}2 platform, aiming to provide an overview about its architecture, and features.},
	author = {Liao, Yuan},
	urldate = {2023-04-11},
	date = {2020},
	langid = {english},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/DA3Z76CF/Liao - 2020 - Introduction of Robot Operating System 2 ROS2.pdf:application/pdf},
}

@inproceedings{maruyama_exploring_2016,
	location = {New York, {NY}, {USA}},
	title = {Exploring the performance of {ROS}2},
	isbn = {978-1-4503-4485-2},
	url = {https://dl.acm.org/doi/10.1145/2968478.2968502},
	doi = {10.1145/2968478.2968502},
	series = {{EMSOFT} '16},
	abstract = {Middleware for robotics development must meet demanding requirements in real-time distributed embedded systems. The Robot Operating System ({ROS}), open-source middleware, has been widely used for robotics applications. However, the {ROS} is not suitable for real-time embedded systems because it does not satisfy real-time requirements and only runs on a few {OSs}. To address this problem, {ROS}1 will undergo a significant upgrade to {ROS}2 by utilizing the Data Distribution Service ({DDS}). {DDS} is suitable for real-time distributed embedded systems due to its various transport configurations (e.g., deadline and fault-tolerance) and scalability. {ROS}2 must convert data for {DDS} and abstract {DDS} from its users; however, this incurs additional overhead, which is examined in this study. Transport latencies between {ROS}2 nodes vary depending on the use cases, data size, configurations, and {DDS} vendors. We conduct proof of concept for {DDS} approach to {ROS} and arrange {DDS} characteristic and guidelines from various evaluations. By highlighting the {DDS} capabilities, we explore and evaluate the potential and constraints of {DDS} and {ROS}2.},
	pages = {1--10},
	booktitle = {Proceedings of the 13th International Conference on Embedded Software},
	publisher = {Association for Computing Machinery},
	author = {Maruyama, Yuya and Kato, Shinpei and Azumi, Takuya},
	urldate = {2023-04-11},
	date = {2016-10-01},
	keywords = {data distribution service, embedded, publish/subscribe, quality of service, real-time, robot operating system},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/F5NIDIHY/Maruyama et al. - 2016 - Exploring the performance of ROS2.pdf:application/pdf},
}

@inproceedings{dehnavi_compros_2021,
	title = {{CompROS}: A composable {ROS}2 based architecture for real-time embedded robotic development},
	doi = {10.1109/IROS51168.2021.9636590},
	shorttitle = {{CompROS}},
	abstract = {Robot Operating System ({ROS}) is a de-facto standard robot middleware in many academic and industrial use cases. However, utilizing {ROS}/{ROS}2 in safety-critical embedded applications with real-time requirement is challenging because of C1) Non-real-time underlying hardware, C2) No control on the host {OS} scheduler, C3) Unpredictable dynamic memory allocation, C4) High resource requirement, and C5) Unpredictable execution model for {ROS} nodes. In this paper, we address these limiting factors by proposing a hardwaresoftware architecture -{CompROS}- for {ROS}2 based robotic development in a Multi-Processor System on Chip ({MPSoC}) platform. The proposed hardware architecture consists of a Hard Real-Time ({HRT}) {RISC}-V based subsystem implemented in the Programmable Logic ({PL}) part of the {MPSoC} platform, a Soft Real-Time ({SRT}) {ARM}-based subsystem in the Processing System ({PS}) part of the {MPSoC} platform, and a Non-Real-Time ({NRT}) {PC}. While the proposed hardware architecture along with a partitioning layer overcomes the first two limiting factors, the rest are managed by the proposed multi-layer software architecture. We make a bare-metal implementation of {XRCE}-{DDS} standard for {PL}-{PS} communication, while peer-to-peer {PL}-{PL} communication is done through a proposed real-time publish-subscribe approach. The reliable communication for {PS}-{PL} communication is done through utilizing C-{HEAP} protocol. Further, we integrate {ROS}2 software layers on top of the proposed hardware and software layers. Finally, with respect to C5, we present a real-time execution model of {ROS}2 nodes by a mapping of {ROS}2 entities to {CompROS} entities, which is validated through experimental results. We run {ROS}2 middleware with an executable size of less than 200 {KB} on an {MPSoC} platform.},
	eventtitle = {2021 {IEEE}/{RSJ} International Conference on Intelligent Robots and Systems ({IROS})},
	pages = {6449--6455},
	booktitle = {2021 {IEEE}/{RSJ} International Conference on Intelligent Robots and Systems ({IROS})},
	author = {Dehnavi, Saeid and Koedam, Martijn and Nelson, Andrew and Goswami, Dip and Goossens, Kees},
	date = {2021-09},
	note = {{ISSN}: 2153-0866},
	keywords = {Real-time systems, Embedded System, Hardware, Limiting, Peer-to-peer computing, Real-time, Robotics, {ROS}2, Service robots, Software architecture, System-on-chip},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/PQZRT2LN/Dehnavi et al. - 2021 - CompROS A composable ROS2 based architecture for .pdf:application/pdf},
}

@inproceedings{puck_distributed_2020,
	title = {Distributed and Synchronized Setup towards Real-Time Robotic Control using {ROS}2 on Linux},
	doi = {10.1109/CASE48305.2020.9217010},
	abstract = {A monolithic black-box controller made by the individual robotic manufacturers commonly controls modern industrial robots. The setup's single components are not accessible nor exchangeable, often due to them being specially tuned and adjusted to fulfill the demanding requirements for robotic control. The open-source framework {ROS} enables to combine these monolithic controllers with simple interfaces, therefore allowing more complex robotic applications. The next generation, {ROS}2, targets highly modular systems of sensors, actuators and controllers, each being interchangeable and further providing real-time capabilities by employing {DDS} as middleware. This study uses system inherent tools alongside non-invasive measurements for comprehensive insights, thereby guiding to {ROS}2 applications on an underlying distributed and synchronized real-time Linux system.},
	eventtitle = {2020 {IEEE} 16th International Conference on Automation Science and Engineering ({CASE})},
	pages = {1287--1293},
	booktitle = {2020 {IEEE} 16th International Conference on Automation Science and Engineering ({CASE})},
	author = {Puck, L. and Keller, P. and Schnell, T. and Plasberg, C. and Tanev, A. and Heppner, G. and Roennau, A. and Dillmann, R.},
	date = {2020-08},
	note = {{ISSN}: 2161-8089},
	keywords = {Real-time systems, Hardware, Service robots, Kernel, Linux, Synchronization},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/CPFP8IQQ/Puck et al. - 2020 - Distributed and Synchronized Setup towards Real-Ti.pdf:application/pdf},
}

@article{macenski_robot_2022,
	title = {Robot Operating System 2: Design, architecture, and uses in the wild},
	volume = {7},
	url = {https://www.science.org/doi/abs/10.1126/scirobotics.abm6074},
	doi = {10.1126/scirobotics.abm6074},
	shorttitle = {Robot Operating System 2},
	abstract = {The next chapter of the robotics revolution is well underway with the deployment of robots for a broad range of commercial use cases. Even in a myriad of applications and environments, there exists a common vocabulary of components that robots share—the need for a modular, scalable, and reliable architecture; sensing; planning; mobility; and autonomy. The Robot Operating System ({ROS}) was an integral part of the last chapter, demonstrably expediting robotics research with freely available components and a modular framework. However, {ROS} 1 was not designed with many necessary production-grade features and algorithms. {ROS} 2 and its related projects have been redesigned from the ground up to meet the challenges set forth by modern robotic systems in new and exploratory domains at all scales. In this Review, we highlight the philosophical and architectural changes of {ROS} 2 powering this new chapter in the robotics revolution. We also show through case studies the influence {ROS} 2 and its adoption has had on accelerating real robot systems to reliable deployment in an assortment of challenging environments.},
	pages = {eabm6074},
	number = {66},
	journaltitle = {Science Robotics},
	author = {Macenski, Steven and Foote, Tully and Gerkey, Brian and Lalancette, Chris and Woodall, William},
	urldate = {2023-04-11},
	date = {2022-05-11},
	note = {Publisher: American Association for the Advancement of Science},
	file = {Submitted Version:/home/manuelm/Zotero/storage/R89GBT46/Macenski et al. - 2022 - Robot Operating System 2 Design, architecture, an.pdf:application/pdf},
}

@article{eros_ros2_2019,
	title = {A {ROS}2 based communication architecture for control in collaborative and intelligent automation systems},
	volume = {38},
	issn = {2351-9789},
	url = {https://www.sciencedirect.com/science/article/pii/S2351978920300469},
	doi = {10.1016/j.promfg.2020.01.045},
	series = {29th International Conference on Flexible Automation and Intelligent Manufacturing ( {FAIM} 2019), June 24-28, 2019, Limerick, Ireland, Beyond Industry 4.0: Industrial Advances, Engineering Education and Intelligent Manufacturing},
	abstract = {Collaborative robots are becoming part of intelligent automation systems in modern industry. Development and control of such systems differs from traditional automation methods and consequently leads to new challenges. Thankfully, Robot Operating System ({ROS}) provides a communication platform and a vast variety of tools and utilities that can aid that development. However, it is hard to use {ROS} in large-scale automation systems due to communication issues in a distributed setup, hence the development of {ROS}2. In this paper, a {ROS}2 based communication architecture is presented together with an industrial use-case of a collaborative and intelligent automation system.},
	pages = {349--357},
	journaltitle = {Procedia Manufacturing},
	shortjournal = {Procedia Manufacturing},
	author = {Erős, Endre and Dahl, Martin and Bengtsson, Kristofer and Hanna, Atieh and Falkman, Petter},
	urldate = {2023-04-11},
	date = {2019-01-01},
	langid = {english},
	keywords = {robot operating system, collaborative robots, communication architecture, intelligent automation, multi-master, robot programming},
	file = {ScienceDirect Full Text PDF:/home/manuelm/Zotero/storage/GQRLRHJJ/Erős et al. - 2019 - A ROS2 based communication architecture for contro.pdf:application/pdf;ScienceDirect Snapshot:/home/manuelm/Zotero/storage/4WESCW96/S2351978920300469.html:text/html},
}

@inproceedings{liu_formal_2018,
	title = {Formal Analysis and Verification of {DDS} in {ROS}2},
	doi = {10.1109/MEMCOD.2018.8556970},
	abstract = {Robot Operating System({ROS}) is widely used in the development of various service robots, which have high requirements in safety and reliability. Data distribution service({DDS}) is deployed in {ROS}2 to implement the control of nodes and data distribution, which is very important for the operation of application on {ROS}2. In this paper, we focus on model abstraction, formal modeling and automatic verification for {DDS} in {ROS}2. A distributed model with interface parameters was established in {PRISM}. Properties such as security, liveness and priority of {DDS} in {ROS}2 were verified. The results show that the design satisfies these properties and high-priority messages can be sent and transmitted preferentially by the system. Due to the experiment result, we come up with a suggestion that the system will be better if its buffer can store six messages or more.},
	eventtitle = {2018 16th {ACM}/{IEEE} International Conference on Formal Methods and Models for System Design ({MEMOCODE})},
	pages = {1--5},
	booktitle = {2018 16th {ACM}/{IEEE} International Conference on Formal Methods and Models for System Design ({MEMOCODE})},
	author = {Liu, Yanan and Guan, Yong and Li, Xiaojuan and Wang, Rui and Zhang, Jie},
	date = {2018-10},
	keywords = {publish/subscribe, Service robots, Automata, {DDS}, model checking, Probabilistic logic, probabilistic timed automata, Publishing, {ROS}, Safety, Security, System recovery},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/KJ4FB4GU/Liu et al. - 2018 - Formal Analysis and Verification of DDS in ROS2.pdf:application/pdf},
}

@inproceedings{ye_real-time_2021,
	location = {Cham},
	title = {Real-Time Design Based on {PREEMPT}\_RT and Timing Analysis of Collaborative Robot Control System},
	isbn = {978-3-030-89098-8},
	doi = {10.1007/978-3-030-89098-8_56},
	series = {Lecture Notes in Computer Science},
	abstract = {The design of the collaborative robot control system is restricted by the following key factors: real-time system, field bus, robot frame and human-computer interaction module. Academia and industry have an urgent need for high-quality, high-stability, distributed and easy-to-operate control systems with the development of the robotics industry. Robot systems architecture based on {ROS} and {ROS}2 have attracted more and more attention due to the flexibility, openness, modularity, scalability and friendliness. The main contribution of this article is to partially construct the real-time architecture of the collaborative robot control system. In addition, the timing jitter of the system, {EtherCAT} master station and {ROS} under different frequencies and loads is analyzed. First, a Linux kernel based on {PREEMPT}\_RT patch is constructed, the basic architecture is described, and the timing performance of the robot system is improved through the application of high-precision timers, priority assignment, scheduling mode, and energy consumption management. Furthermore, the timing jitter performance of the operating system is analyzed. The maximum jitter of the system and the {EtherCAT} master station is about 10 us, and the average jitter is 1 us. Finally, the timing jitter of the built-in timing callbacks in {ROS} and {ROS}2 is evaluated. The design of the real-time system and performance analysis provide critical support for the design of the robot controller.},
	pages = {596--606},
	booktitle = {Intelligent Robotics and Applications},
	publisher = {Springer International Publishing},
	author = {Ye, Yanlei and Li, Peng and Li, Zihao and Xie, Fugui and Liu, Xin-Jun and Liu, Jianhui},
	editor = {Liu, Xin-Jun and Nie, Zhenguo and Yu, Jingjun and Xie, Fugui and Song, Rui},
	date = {2021},
	langid = {english},
	keywords = {{ROS}2, {ROS}, {EtherCAT} Master, {PREEMPT}\_RT, Timing Jitter},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/GXK3XEXR/Ye et al. - 2021 - Real-Time Design Based on PREEMPT_RT and Timing An.pdf:application/pdf},
}

@incollection{dasilvamedeiros_enabling_2019,
	location = {Cham},
	title = {Enabling Real-Time Processing for {ROS}2 Embedded Systems},
	isbn = {978-3-319-91590-6},
	url = {https://doi.org/10.1007/978-3-319-91590-6_14},
	series = {Studies in Computational Intelligence},
	abstract = {Our research aims to integrate {FreeRTPS}, a portable and minimalist {RTPS} (Real-Time Publisher-Subscriber), an implementation that provides an option for embedded {ROS}2 (Robot Operating System), applications where {RAM}(Random Access Memory)/{ROM}(Read-Only Memory) size is a critical factor, with {FreeRTOS}, a free real-time operating system for microcontrollers and small microprocessors. As a result, we have a portable system that enables sensing and the possibilities of real-time processing, while communicating with {ROS}2 nodes in small and low-cost devices. Even having tools to implement internal real-time processing the system not ensure that the communication with other nodes will have real time constraints, once that we look for processing and not communication real-time. Real-time processing is an important component especially in Robotics where many applications require some data processing as it comes in, what means that they need processing with time requirements. The chapter shows some concepts, how the system was developed, how to implement it on the {STM}32F4 microcontroller and some tests to show its capabilities. The main system was developed under Ubuntu 16.04, with a {STM}32F4 microcontroller, and the portability test was made under Microsoft Windows 10, with a Texas Instruments {LM}3S Stellaris board. All presented components are published on the wiki {ROS} link: http://wiki.ros.org/{FreeRTPS}\%2BFreeRTOS.},
	pages = {477--528},
	booktitle = {Robot Operating System ({ROS}): The Complete Reference (Volume 3)},
	publisher = {Springer International Publishing},
	author = {da Silva Medeiros, Lucas and Julio, Ricardo Emerson and Almeida, Rodrigo Maximiano Antunes de and Bastos, Guilherme Sousa},
	editor = {Koubaa, Anis},
	urldate = {2023-04-11},
	date = {2019},
	langid = {english},
	doi = {10.1007/978-3-319-91590-6_14},
	keywords = {Real-time, {ROS}2, Embedded, {FreeRTOS}, {FreeRTPS}},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/3HLJ9IDC/da Silva Medeiros et al. - 2019 - Enabling Real-Time Processing for ROS2 Embedded Sy.pdf:application/pdf},
}

@article{mondada_swarm-bot_2004,
	title = {Swarm-Bot: A New Distributed Robotic Concept},
	volume = {17},
	issn = {1573-7527},
	url = {https://doi.org/10.1023/B:AURO.0000033972.50769.1c},
	doi = {10.1023/B:AURO.0000033972.50769.1c},
	shorttitle = {Swarm-Bot},
	abstract = {The swarm intelligence paradigm has proven to have very interesting properties such as robustness, flexibility and ability to solve complex problems exploiting parallelism and self-organization. Several robotics implementations of this paradigm confirm that these properties can be exploited for the control of a population of physically independent mobile robots.},
	pages = {193--221},
	number = {2},
	journaltitle = {Autonomous Robots},
	shortjournal = {Autonomous Robots},
	author = {Mondada, Francesco and Pettinaro, Giovanni C. and Guignard, Andre and Kwee, Ivo W. and Floreano, Dario and Deneubourg, Jean-Louis and Nolfi, Stefano and Gambardella, Luca Maria and Dorigo, Marco},
	urldate = {2023-04-11},
	date = {2004-09-01},
	langid = {english},
	keywords = {collective robotics, distributed robotics, physics-based simulation, reconfigurable robotics, swarm intelligence, swarm robotics},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/4E8LW938/Mondada et al. - 2004 - Swarm-Bot A New Distributed Robotic Concept.pdf:application/pdf},
}

@article{gauthier_interprocess_1987,
	title = {Interprocess communication for distributed robotics},
	volume = {3},
	issn = {2374-8710},
	doi = {10.1109/JRA.1987.1087141},
	abstract = {Robot tasks have come to demand flexible sensory-based "intelligent" behavior. The single robot has given way to multiple robots cooperating in three-dimensional dynamic environments which allow them to accomplish complex and intricate tasks. Because of the complex nature of the tasks performed, centralized control is no longer practical; workcells have become centers of distributed computing. This motivates the need for an interprocess communication ({IPC}) facility which would integrate the individual elements both within and between workcells. A survey of {IPC} is presented in the context of distributed robotics. To make the survey more meaningful, it is introduced by some remarks about general approaches to communication within a distributed computing environment. A discussion of the main {IPC} design issues for distributed robotics is included.},
	pages = {493--504},
	number = {6},
	journaltitle = {{IEEE} Journal on Robotics and Automation},
	author = {Gauthier, D. and Freedman, P. and Carayannis, G. and Malowany, A.},
	date = {1987-12},
	note = {Conference Name: {IEEE} Journal on Robotics and Automation},
	keywords = {Centralized control, Communication system control, Computer vision, Context, Distributed computing, Intelligent robots, Open systems, Robot control, Robot kinematics, Robot sensing systems},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/23BRWGC8/Gauthier et al. - 1987 - Interprocess communication for distributed robotic.pdf:application/pdf},
}

@online{noauthor_theoretical_nodate,
	title = {Theoretical problems for the realization of distributed robotic systems},
	url = {https://www.computer.org/csdl/proceedings-article/robot/1991/00131906/12OmNxvwoSU},
	urldate = {2023-04-11},
	file = {Theoretical problems for the realization of distributed robotic systems:/home/manuelm/Zotero/storage/SQ6CXEJJ/12OmNxvwoSU.html:text/html},
}

@incollection{parker_current_2000,
	location = {Tokyo},
	title = {Current State of the Art in Distributed Autonomous Mobile Robotics},
	isbn = {978-4-431-67919-6},
	url = {https://doi.org/10.1007/978-4-431-67919-6_1},
	abstract = {As research progresses in distributed robotic systems, more and more aspects of multi-robot systems are being explored. This article surveys the current state of the art in distributed mobile robot systems. Our focus is principally on research that has been demonstrated in physical robot implementations. We have identified eight primary research topics within multi-robot systems — biological inspirations, communication, architectures, localization/mapping/exploration, object transport and manipulation, motion coordination, reconfigurable robots, and learning — and discuss the current state of research in these areas. As we describe each research area, we identify some key open issues in multi-robot team research. We conclude by identifying several additional open research issues in distributed mobile robotic systems.},
	pages = {3--12},
	booktitle = {Distributed Autonomous Robotic Systems 4},
	publisher = {Springer Japan},
	author = {Parker, Lynne E.},
	editor = {Parker, Lynne E. and Bekey, George and Barhen, Jacob},
	urldate = {2023-04-11},
	date = {2000},
	langid = {english},
	doi = {10.1007/978-4-431-67919-6_1},
	keywords = {cooperative robotics, Distributed robotics, multi-robot systems, survey},
}

@article{lian_network_2002,
	title = {Network design consideration for distributed control systems},
	volume = {10},
	issn = {1558-0865},
	doi = {10.1109/87.987076},
	abstract = {This paper discusses the impact of network architecture on control performance in a class of distributed control systems called networked control systems ({NCSs}) and provides design considerations related to control quality of performance as well as network quality of service. The integrated network-control system changes the characteristics of time delays between application devices. This study first identifies several key components of the time delay through an analysis of network protocols and control dynamics. The analysis of network and control parameters is used to determine an acceptable working range of sampling periods in an {NCS}. A network-control simulator and an experimental networked a machine tool have been developed to help validate and demonstrate the performance analysis results and identify the special performance characteristics in an {NCS}. These performance characteristics are useful guidelines for choosing the network and control parameters when designing an {NCS}.},
	pages = {297--307},
	number = {2},
	journaltitle = {{IEEE} Transactions on Control Systems Technology},
	author = {Lian, Feng-Li and Moyne, J. and Tilbury, D.},
	date = {2002-03},
	note = {Conference Name: {IEEE} Transactions on Control Systems Technology},
	keywords = {Analytical models, Control systems, Delay effects, Distributed control, Machine tools, Networked control systems, Performance analysis, Protocols, Quality of service, Sampling methods},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/YHV9AMVS/Lian et al. - 2002 - Network design consideration for distributed contr.pdf:application/pdf},
}

@incollection{heck_software_2009,
	location = {Dordrecht},
	title = {Software Technology for Implementing Reusable, Distributed Control Systems},
	isbn = {978-90-481-3018-4},
	url = {https://doi.org/10.1007/978-90-481-3018-4_11},
	series = {Intelligent Systems, Control, and Automation: Science and Engineering},
	abstract = {Control systems such as those used in satellites, spacecraft, automobiles, chemical processing plants, and manufacturing rely heavily on the software that is used to implement them. In fact, engineers at Boeing Co. and Honeywell Inc. have estimated that 60–80\% of the development of a complex control system is the software development effort, while only 20–40\% is the actual control system design. The software effort includes programming individual software modules as well as writing code for communications between comnponents. Much of the software development time is spent on making the software stable and reliable, such as tracing possible hazard conditions and inserting software fault protection methods. When the operation of a control system is highly critical due to human safety factors or the high cost of failure in damaged capital or products, the software designers must expend extra effort to validate and verify their software before it can be released. In flight-critical operations, validation and verification are part of the flight certification process.},
	pages = {267--293},
	booktitle = {Applications of Intelligent Control to Engineering Systems},
	publisher = {Springer Netherlands},
	author = {Heck, Bonnie S. and Wills, Linda M. and Vachtsevanos, George J.},
	editor = {Valavanis, Kimon P.},
	urldate = {2023-04-11},
	date = {2009},
	langid = {english},
	doi = {10.1007/978-90-481-3018-4_11},
	keywords = {Distribute Control System, Object Management Group, Object Request Broker, Server Object, Software Technology},
}

@article{sinopoli_distributed_2003,
	title = {Distributed control applications within sensor networks},
	volume = {91},
	issn = {1558-2256},
	doi = {10.1109/JPROC.2003.814926},
	abstract = {Sensor networks are gaining a central role in the research community. This paper addresses some of the issues arising from the use of sensor networks in control applications. Classical control theory proves to be insufficient in modeling distributed control problems where issues of communication delay, jitter, and time synchronization between components are not negligible. After discussing our hardware and software platform and our target application, we review useful models of computation and then suggest a mixed model for design, analysis, and synthesis of control algorithms within sensor networks. We present a hierarchical model composed of continuous time-trigger components at the low level and discrete event-triggered components at the high level.},
	pages = {1235--1246},
	number = {8},
	journaltitle = {Proceedings of the {IEEE}},
	author = {Sinopoli, B. and Sharp, C. and Schenato, L. and Schaffert, S. and Sastry, S.S.},
	date = {2003-08},
	note = {Conference Name: Proceedings of the {IEEE}},
	keywords = {Hardware, Communication system control, Delay effects, Distributed control, Algorithm design and analysis, Application software, Computational modeling, Computer networks, Control theory, Jitter},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/94PFZVF5/Sinopoli et al. - 2003 - Distributed control applications within sensor net.pdf:application/pdf},
}

@inproceedings{vogel-heuser_modeling_2011,
	title = {Modeling network architecture and time behavior of Distributed Control Systems in industrial plant automation},
	doi = {10.1109/IECON.2011.6119656},
	abstract = {In terms of fulfilling the customers' needs, Distributed Control Systems ({DCS}) have gained increasing significance for automation engineering over the past years. The advantages of {DCS}, e.g. enhanced dependability, flexibility and configurability, overcome various shortcomings of centralized control systems. However, engineering of heterogeneous networks lacks a modeling notation for automation and engineers and a tool support to calculate the time behavior. A notation for an intuitive and supplier independent specification of distributed automation systems is described, providing the opportunity to model real-time requirements and properties and to allow the comparison of different architectures regarding time behavior.},
	eventtitle = {{IECON} 2011 - 37th Annual Conference of the {IEEE} Industrial Electronics Society},
	pages = {2232--2237},
	booktitle = {{IECON} 2011 - 37th Annual Conference of the {IEEE} Industrial Electronics Society},
	author = {Vogel-Heuser, B. and Feldmann, S. and Werner, T. and Diedrich, C.},
	date = {2011-11},
	note = {{ISSN}: 1553-572X},
	keywords = {Automation, Actuators, Communication networks, Delay, Real time systems, Sensors, Unified modeling language},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/E8T23894/Vogel-Heuser et al. - 2011 - Modeling network architecture and time behavior of.pdf:application/pdf},
}

@article{fernandez_analysis_2019,
	title = {Analysis and Evaluation of a Wired/Wireless Hybrid Architecture for Distributed Control Systems With Mobility Requirements},
	volume = {7},
	issn = {2169-3536},
	doi = {10.1109/ACCESS.2019.2927298},
	abstract = {Wireless communications offer significant benefits over wired communications, which has increased their popularity in industrial applications. Nevertheless, the existing wireless standard technologies do not satisfy the requirements demanded by the most critical industrial applications and thus, wired communications cannot be directly replaced by wireless solutions. Moreover, the inclusion of movable nodes in the network brings new challenges, such as the handover mechanism. In this paper, a hybrid wired/wireless architecture designed for industrial control applications is proposed. To control the wired network, a time-sensitive network ({TSN}) is used and to control the wireless network a medium access control ({MAC}) protocol is designed. In order to communicate both networks, a bridge that acts as a deterministic access point ({AP}) with real-time features is also proposed. One of the fundamental parts of the proposed architecture is that it can be used in applications with mobility requirements. Hence, a soft-handover algorithm is designed which guarantees uninterrupted communication during its execution without the need for a second radio interface and with reduced growth in network overhead. The proposed architecture is evaluated in order to assess its performance. This paper extends our previous work, including both a theoretical analysis to determine the delay bounds of the proposed architecture and a comparison between the performances of the proposed handover algorithm with other algorithms proposed in the literature. The evaluation has been carried out through {OMNeT}++ simulations. The results demonstrate the superiority of the proposed handover algorithm compared with other state-of-the-art solutions.},
	pages = {95915--95931},
	journaltitle = {{IEEE} Access},
	author = {Fernández, Zaloa and Seijo, Óscar and Mendicute, Mikel and Val, Iñaki},
	date = {2019},
	note = {Conference Name: {IEEE} Access},
	keywords = {Handover, {IEEE} 802.11, {IEEE} 802.11 Standard, industrial communications, industrial wireless sensor and actuator networks, real-time communications, Reliability, {SHARP}, {TSN}, Wireless communication, wireless communications, Wireless sensor networks},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/JBYYADHW/Fernández et al. - 2019 - Analysis and Evaluation of a WiredWireless Hybrid.pdf:application/pdf},
}

@article{mahalik_prototype_2008,
	title = {A Prototype for Hardware-in-the-Loop Simulation of a Distributed Control Architecture},
	volume = {38},
	issn = {1558-2442},
	doi = {10.1109/TSMCC.2007.913891},
	abstract = {This paper presents work with regard to specification of requirement, design, and development of a hardware-in-the-loop simulation ({HILS})-based advance tool for the configuration, validation, and management of a control network ({CN}). Embedding a simulation scenario within the design domain can improve optimality, validity, reusability, integrability, and productivity. This paper studies the basic infrastructure required to realize the {HILS} tool for distributed control systems ({DCS}). {HILS} for {CN} ({HILS}4CN) inherits most of the state-of-the-art attributes of control software including modularity, flexibility, {GUI}-conformant user-friendliness, and multiuser capability. Besides its virtual boundary, the operational range of {HILS}4CN has also been extended in terms of incorporating the online management functions such as winking, installation, ad monitoring, etc., in order to achieve online extendibility and scalability. The utility of the developed tool is tested through case studies with two exemplar platforms such as a printed circuit board drilling machine and semiautonomous mobile robotic systems.},
	pages = {189--200},
	number = {2},
	journaltitle = {{IEEE} Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)},
	author = {Mahalik, Nitaigour P. and Kim, Kiseon},
	date = {2008-03},
	note = {Conference Name: {IEEE} Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)},
	keywords = {Computer aided software engineering, Distributed control, Computational modeling, Autonomous systems, Circuit testing, Computer simulation, control systems and networks, distributed control, hardware-in-the-loop ({HIL}), Information processing, Process design, Productivity, sensor networks, Standardization, Virtual prototyping},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/AYPVT9Z2/Mahalik and Kim - 2008 - A Prototype for Hardware-in-the-Loop Simulation of.pdf:application/pdf},
}

@inproceedings{vogel-heuser_modeling_2011-1,
	title = {Modeling network architecture and time behavior of Distributed Control Systems in industrial plant automation},
	doi = {10.1109/IECON.2011.6119656},
	abstract = {In terms of fulfilling the customers' needs, Distributed Control Systems ({DCS}) have gained increasing significance for automation engineering over the past years. The advantages of {DCS}, e.g. enhanced dependability, flexibility and configurability, overcome various shortcomings of centralized control systems. However, engineering of heterogeneous networks lacks a modeling notation for automation and engineers and a tool support to calculate the time behavior. A notation for an intuitive and supplier independent specification of distributed automation systems is described, providing the opportunity to model real-time requirements and properties and to allow the comparison of different architectures regarding time behavior.},
	eventtitle = {{IECON} 2011 - 37th Annual Conference of the {IEEE} Industrial Electronics Society},
	pages = {2232--2237},
	booktitle = {{IECON} 2011 - 37th Annual Conference of the {IEEE} Industrial Electronics Society},
	author = {Vogel-Heuser, B. and Feldmann, S. and Werner, T. and Diedrich, C.},
	date = {2011-11},
	note = {{ISSN}: 1553-572X},
	keywords = {Automation, Actuators, Communication networks, Delay, Real time systems, Sensors, Unified modeling language},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/EFILM4YU/Vogel-Heuser et al. - 2011 - Modeling network architecture and time behavior of.pdf:application/pdf},
}

@article{fernandez_analysis_2019-1,
	title = {Analysis and Evaluation of a Wired/Wireless Hybrid Architecture for Distributed Control Systems With Mobility Requirements},
	volume = {7},
	issn = {2169-3536},
	doi = {10.1109/ACCESS.2019.2927298},
	abstract = {Wireless communications offer significant benefits over wired communications, which has increased their popularity in industrial applications. Nevertheless, the existing wireless standard technologies do not satisfy the requirements demanded by the most critical industrial applications and thus, wired communications cannot be directly replaced by wireless solutions. Moreover, the inclusion of movable nodes in the network brings new challenges, such as the handover mechanism. In this paper, a hybrid wired/wireless architecture designed for industrial control applications is proposed. To control the wired network, a time-sensitive network ({TSN}) is used and to control the wireless network a medium access control ({MAC}) protocol is designed. In order to communicate both networks, a bridge that acts as a deterministic access point ({AP}) with real-time features is also proposed. One of the fundamental parts of the proposed architecture is that it can be used in applications with mobility requirements. Hence, a soft-handover algorithm is designed which guarantees uninterrupted communication during its execution without the need for a second radio interface and with reduced growth in network overhead. The proposed architecture is evaluated in order to assess its performance. This paper extends our previous work, including both a theoretical analysis to determine the delay bounds of the proposed architecture and a comparison between the performances of the proposed handover algorithm with other algorithms proposed in the literature. The evaluation has been carried out through {OMNeT}++ simulations. The results demonstrate the superiority of the proposed handover algorithm compared with other state-of-the-art solutions.},
	pages = {95915--95931},
	journaltitle = {{IEEE} Access},
	author = {Fernández, Zaloa and Seijo, Óscar and Mendicute, Mikel and Val, Iñaki},
	date = {2019},
	note = {Conference Name: {IEEE} Access},
	keywords = {Handover, {IEEE} 802.11, {IEEE} 802.11 Standard, industrial communications, industrial wireless sensor and actuator networks, real-time communications, Reliability, {SHARP}, {TSN}, Wireless communication, wireless communications, Wireless sensor networks},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/J65EUCWK/Fernández et al. - 2019 - Analysis and Evaluation of a WiredWireless Hybrid.pdf:application/pdf},
}

@article{mahalik_prototype_2008-1,
	title = {A Prototype for Hardware-in-the-Loop Simulation of a Distributed Control Architecture},
	volume = {38},
	issn = {1558-2442},
	doi = {10.1109/TSMCC.2007.913891},
	abstract = {This paper presents work with regard to specification of requirement, design, and development of a hardware-in-the-loop simulation ({HILS})-based advance tool for the configuration, validation, and management of a control network ({CN}). Embedding a simulation scenario within the design domain can improve optimality, validity, reusability, integrability, and productivity. This paper studies the basic infrastructure required to realize the {HILS} tool for distributed control systems ({DCS}). {HILS} for {CN} ({HILS}4CN) inherits most of the state-of-the-art attributes of control software including modularity, flexibility, {GUI}-conformant user-friendliness, and multiuser capability. Besides its virtual boundary, the operational range of {HILS}4CN has also been extended in terms of incorporating the online management functions such as winking, installation, ad monitoring, etc., in order to achieve online extendibility and scalability. The utility of the developed tool is tested through case studies with two exemplar platforms such as a printed circuit board drilling machine and semiautonomous mobile robotic systems.},
	pages = {189--200},
	number = {2},
	journaltitle = {{IEEE} Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)},
	author = {Mahalik, Nitaigour P. and Kim, Kiseon},
	date = {2008-03},
	note = {Conference Name: {IEEE} Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)},
	keywords = {Computer aided software engineering, Distributed control, Computational modeling, Autonomous systems, Circuit testing, Computer simulation, control systems and networks, distributed control, hardware-in-the-loop ({HIL}), Information processing, Process design, Productivity, sensor networks, Standardization, Virtual prototyping},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/96UP5NCT/Mahalik and Kim - 2008 - A Prototype for Hardware-in-the-Loop Simulation of.pdf:application/pdf},
}

@article{jogwar_community-based_2017,
	title = {Community-based synthesis of distributed control architectures for integrated process networks},
	volume = {172},
	issn = {0009-2509},
	url = {https://www.sciencedirect.com/science/article/pii/S0009250917304323},
	doi = {10.1016/j.ces.2017.06.043},
	abstract = {In this paper, we propose a graph-theoretic framework for designing architectures for distributed control. Specifically, the popular concept of community structure is used to decompose an integrated network into multiple sub-networks with minimum interactions. The state space of the network is represented as an equation graph (directed). Communities identified on this graph represent sub-controllers for the distributed control system. A quality measure ‘interactivity’ is defined to compare such decompositions. The proposed method has many advantages (e.g. possibility of non-square controllers, provision to ensure controllability and observability, scalability, etc.) over existing approaches. The effectiveness of the proposed framework is illustrated via several industrially relevant examples.},
	pages = {434--443},
	journaltitle = {Chemical Engineering Science},
	shortjournal = {Chemical Engineering Science},
	author = {Jogwar, Sujit Suresh and Daoutidis, Prodromos},
	urldate = {2023-04-11},
	date = {2017-11-23},
	langid = {english},
	keywords = {Distributed control, Community structure, Graph theory, Integrated networks, Multivariable control},
	file = {ScienceDirect Full Text PDF:/home/manuelm/Zotero/storage/CLL6VK48/Jogwar and Daoutidis - 2017 - Community-based synthesis of distributed control a.pdf:application/pdf},
}

@article{ding_survey_2019,
	title = {A Survey on Model-Based Distributed Control and Filtering for Industrial Cyber-Physical Systems},
	volume = {15},
	issn = {1941-0050},
	doi = {10.1109/TII.2019.2905295},
	abstract = {Industrial cyber-physical systems ({CPSs}) are large-scale, geographically dispersed, and life-critical systems, in which lots of sensors and actuators are embedded and networked together to facilitate real-time monitoring and closed-loop control. Their intrinsic features in geographic space and resources put forward to urgent requirements of reliability and scalability for designed filtering or control schemes. This paper presents a review of the state-of-the-art of distributed filtering and control of industrial {CPSs} described by differential dynamics models. Special attention is paid to sensor networks, manipulators, and power systems. For real-time monitoring, some typical Kalman-based distributed algorithms are summarized and their performances on calculation burden and communication burden, as well as scalability, are discussed in depth. Then, the characteristics of non-Kalman cases are further disclosed in light of constructed filter structures. Furthermore, the latest development is surveyed for distributed cooperative control of mobile manipulators and distributed model predictive control in industrial automation systems. By resorting to droop characteristics, representative distributed control strategies classified by controller structures are systematically summarized for power systems with the requirements of power sharing and voltage and frequency regulation. In addition, distributed security control of industrial {CPSs} is reviewed when cyber-attacks are taken into consideration. Finally, some challenges are raised to guide the future research.},
	pages = {2483--2499},
	number = {5},
	journaltitle = {{IEEE} Transactions on Industrial Informatics},
	author = {Ding, Derui and Han, Qing-Long and Wang, Zidong and Ge, Xiaohua},
	date = {2019-05},
	note = {Conference Name: {IEEE} Transactions on Industrial Informatics},
	keywords = {Distributed control, Actuators, Sensors, Cyber-physical systems, Decentralized control, distributed filtering, droop characteristics, industrial cyber-physical systems ({CPSs}), Informatics, Kalman filters, power schedule},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/QG8R43IX/Ding et al. - 2019 - A Survey on Model-Based Distributed Control and Fi.pdf:application/pdf},
}

@article{zhou_distributed_2020,
	title = {Distributed Control and Communication Strategies in Networked Microgrids},
	volume = {22},
	issn = {1553-877X},
	doi = {10.1109/COMST.2020.3023963},
	abstract = {Networked microgrids ({NMGs}) provide a promising solution for accommodating various distributed energy resources ({DERs}) and enhancing the system performance in terms of reliability, resilience, flexibility, and energy efficiency. With the penetration of {MGs}, the communication-based distributed control is playing an increasingly important role in {NMGs} for coordinating a multitude of heterogeneous and spatially distributed {DERs}, which feature enhanced efficiency, reliability, resilience, scalability, and privacy-preserving as compared with conventional centralized control. This article aims to provide a comprehensive survey of distributed control and communication strategies in {NMGs}. We provide thorough discussions and elaborate on: 1) Essential merits of {MGs} and {NMGs}, and their practical implementations; 2) Distributed communication network characteristics and specific operation objectives of {NMGs}; 3) Classifications of distributed control strategies in {NMGs} and their salient features; 4) Communication reliability issues concerning data timeliness, data availability, and data accuracy, and the development of countermeasures; 5) Advancements in several promising communication and computation technologies and their potential applications in {NMGs}.},
	pages = {2586--2633},
	number = {4},
	journaltitle = {{IEEE} Communications Surveys \& Tutorials},
	author = {Zhou, Quan and Shahidehpour, Mohammad and Paaso, Aleksi and Bahramirad, Shay and Alabdulwahab, Ahmed and Abusorrah, Abdullah},
	date = {2020},
	note = {Conference Name: {IEEE} Communications Surveys \& Tutorials},
	keywords = {Decentralized control, distributed control and communication techniques, Distributed databases, distributed energy resources, Internet of Things, Microgrids, Networked microgrids, Power system reliability, Resilience},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/AB2RFND5/Zhou et al. - 2020 - Distributed Control and Communication Strategies i.pdf:application/pdf},
}

@article{bukar_architectural_2022,
	title = {Architectural Design, Improvement, and Challenges of Distributed Software-Defined Wireless Sensor Networks},
	volume = {122},
	issn = {1572-834X},
	url = {https://doi.org/10.1007/s11277-021-09000-2},
	doi = {10.1007/s11277-021-09000-2},
	abstract = {Software-defined networking ({SDN}) is widely perceived to simplify network management and monitoring. The introduction of the {SDN} model into wireless sensor networks ({WSNs})—{SDWSNs}—helps the {SDN} controller perform intensive tasks. In contrast, sensor nodes will only perform forwarding tasks to address a {WSN}’s many problems and challenges, such as energy consumption, reliability, and consistency. This study conducts a review following a systematic process to identify the development concerning the architectural design of {SDWSNs} with a particular emphasis on the distributed control and programmability features of sensor nodes. A total of 84 papers from reputable databases were evaluated through thematic analysis. The findings revealed the relationship between an {SDN} and a {WSN} from conceptual perspectives, the taxonomy of research studies conducted for {SDWSNs}, and the various architectural development of {SDWSNs} proposed in the literature from programmable sensor nodes’ perspectives, software sensor nodes, and distributed control. Moreover, the open issues and challenges faced by {SDWSNs}’ solutions still include the inherent problems of optimal energy consumption, security, and distributed implementations for various applications.},
	pages = {2395--2439},
	number = {3},
	journaltitle = {Wireless Personal Communications},
	shortjournal = {Wireless Pers Commun},
	author = {Bukar, Umar Ali and Othman, Mohamed},
	urldate = {2023-04-11},
	date = {2022-02-01},
	langid = {english},
	keywords = {Controller, Distributed controllers, Software-defined networking, Software-defined wireless sensor network, Wireless sensor network},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/IV72AMZI/Bukar and Othman - 2022 - Architectural Design, Improvement, and Challenges .pdf:application/pdf},
}

@article{wuthishuwong_distributed_2020,
	title = {Distributed control system architecture for balancing and stabilizing traffic in the network of multiple autonomous intersections using feedback consensus and route assignment method},
	volume = {6},
	issn = {2198-6053},
	url = {https://doi.org/10.1007/s40747-019-00125-3},
	doi = {10.1007/s40747-019-00125-3},
	abstract = {Autonomous and intelligent system show a remarkable step in urban traffic management. Autonomous Intersection Management ({AIM}) is an outstanding example of using an autonomous vehicle and wireless communication technology. The traffic performance of a single {AIM} system has been proved in many works however, traffic in the network of multiple {AIMs} is waiting for an implementation. Coordination of traffic between intersections in the network is an important step of managing the overall networked traffic throughput. The authors modeled the traffic network with the multi-agents concept and used the discrete consensus algorithm to coordinate between autonomous agents and implemented the rerouting algorithm in order to distribute the excessive traffics to neighbored intersections with the optimal condition. Our target is to have a balance traffic in each intersection and reaches the equilibrium where the stability has been not compromised. The results show that reaching consensus condition will bring the networked traffic to an equilibrium state where a peak traffic will not be happened. In addition, this method shows that when traffic in a network reached consensus, it will also converge to the Nash equilibrium in the finite time.},
	pages = {165--187},
	number = {1},
	journaltitle = {Complex \& Intelligent Systems},
	shortjournal = {Complex Intell. Syst.},
	author = {Wuthishuwong, Chairit and Traechtler, Ansgar},
	urldate = {2023-04-11},
	date = {2020-04-01},
	langid = {english},
	keywords = {Autonomous Intersection Management, Autonomous vehicle, Discrete time consensus algorithm, Infrastructure to infrastructure communication, Multi-agents, Nash equilibrium, Traffic equilibrium, Vehicle to infrastructure communication},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/UMPUX4A4/Wuthishuwong and Traechtler - 2020 - Distributed control system architecture for balanc.pdf:application/pdf},
}

@article{zhang_networked_2020,
	title = {Networked control systems: a survey of trends and techniques},
	volume = {7},
	issn = {2329-9274},
	doi = {10.1109/JAS.2019.1911651},
	shorttitle = {Networked control systems},
	abstract = {Networked control systems are spatially distributed systems in which the communication between sensors, actuators, and controllers occurs through a shared band-limited digital communication network. Several advantages of the network architectures include reduced system wiring, plug and play devices, increased system agility, and ease of system diagnosis and maintenance. Consequently, networked control is the current trend for industrial automation and has ever-increasing applications in a wide range of areas, such as smart grids, manufacturing systems, process control, automobiles, automated highway systems, and unmanned aerial vehicles. The modelling, analysis, and control of networked control systems have received considerable attention in the last two decades. The ‘ control over networks ’ is one of the key research directions for networked control systems. This paper aims at presenting a survey of trends and techniques in networked control systems from the perspective of ‘ control over networks ’ , providing a snapshot of five control issues: sampled-data control, quantization control, networked control, event-triggered control, and security control. Some challenging issues are suggested to direct the future research.},
	pages = {1--17},
	number = {1},
	journaltitle = {{IEEE}/{CAA} Journal of Automatica Sinica},
	author = {Zhang, Xian-Ming and Han, Qing-Long and Ge, Xiaohua and Ding, Derui and Ding, Lei and Yue, Dong and Peng, Chen},
	date = {2020-01},
	note = {Conference Name: {IEEE}/{CAA} Journal of Automatica Sinica},
	keywords = {Control systems, Communication networks, Delays, Quantization (signal), Sampled data systems, Stability criteria},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/SUUKNGKQ/Zhang et al. - 2020 - Networked control systems a survey of trends and .pdf:application/pdf},
}

@inproceedings{sygulla_ethercat-based_2018,
	title = {An {EtherCAT}-Based Real-Time Control System Architecture for Humanoid Robots},
	doi = {10.1109/COASE.2018.8560532},
	abstract = {The design of humanoid robots naturally requires the simultaneous control of a high number of joints. Moreover, the performance of the overall robot is strongly determined by the low-level control system as all high-level software e.g. for locomotion planning and control is built on top of it. In order to achieve high update rates and high bandwidth for the joint control, an advanced real-time control system architecture is required. However, outdated communication protocols with associated limits in the achievable update rates are still used in nowadays humanoid robots. Moreover, the performance of the low-level control systems is not analyzed in detail or the systems rely on specialized hardware, which lacks reliability and persistence. We present a reliable and high-performance control system architecture for humanoid robots based on the {ETHERCAT} technology. To the authors' knowledge this is the only system, which operates at control rates beyond 2 khz and input/output latencies below 1 ms. Our control architecture includes a learning-based feedforward control strategy to improve joint tracking performance. The improved joint control method and the communication system are evaluated on our humanoid robot {LOLA}. Our software framework is available online to allow other researchers to benefit from our experiences.},
	eventtitle = {2018 {IEEE} 14th International Conference on Automation Science and Engineering ({CASE})},
	pages = {483--490},
	booktitle = {2018 {IEEE} 14th International Conference on Automation Science and Engineering ({CASE})},
	author = {Sygulla, Felix and Wittmann, Robert and Seiwald, Philipp and Berninger, Tobias and Hildebrandt, Arne–Christoph and Wahrmann, Daniel and Rixen, Daniel},
	date = {2018-08},
	note = {{ISSN}: 2161-8089},
	keywords = {Robot control, Bandwidth, Computer architecture, Humanoid robots, Reinforcement learning, Systems architecture, Target tracking},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/ZKN55IXE/Sygulla et al. - 2018 - An EtherCAT-Based Real-Time Control System Archite.pdf:application/pdf},
}

@inproceedings{du_distributed_2018,
	title = {Distributed Microgrid Synchronization Strategy Using a Novel Information Architecture Platform},
	doi = {10.1109/ECCE.2018.8557695},
	abstract = {To seamlessly reconnect an islanded microgrid to the main grid, voltage phasors on both sides of the point of common coupling need to be synchronized before the main relay closes. In this paper, a distributed control strategy is proposed for microgrid synchronization operation. The proposed controller design utilizes pinning-based consensus algorithm to avoid system single point of failure. It is able to actively track the main grid frequency, provide a good coordination between frequency and phase regulation and ensure all distributed generations in the system proportionally share the load. Implementation of such distributed algorithm in practice is difficult because it requires mitigation of both distributed computing and power system engineering challenges. In this paper, a novel software platform called {RIAPS} platform is presented that helps implementing the proposed distributed synchronization strategy in practical hardware controllers. The performance of the controllers are validated using a real-time controller hardware-in-the-loop microgrid testbed.},
	eventtitle = {2018 {IEEE} Energy Conversion Congress and Exposition ({ECCE})},
	pages = {2060--2066},
	booktitle = {2018 {IEEE} Energy Conversion Congress and Exposition ({ECCE})},
	author = {Du, Yuhua and Tu, Hao and Lukic, Srdjan and Dubey, Abhishek and Karsai, Gabor},
	date = {2018-09},
	note = {{ISSN}: 2329-3748},
	keywords = {Hardware, distributed control, Microgrids, consensus algorithm, distributed generation, microgrid synchronization, Regulation, Software, Software algorithms, Stability, Time-frequency analysis},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/Y6APWCXJ/Du et al. - 2018 - Distributed Microgrid Synchronization Strategy Usi.pdf:application/pdf},
}

@inproceedings{wu_research_2020,
	title = {Research on Architecture and Time-delay of Metallurgical Industry Cloud Control System},
	doi = {10.1109/CAC51589.2020.9326864},
	abstract = {As a process industry, the metallurgical industry has harsh production conditions and complex control systems, making it difficult to achieve optimal operation, while the rise of cloud computing has brought new ideas to the metallurgical industry control in recent years. Cloud control system ({CCS}) is the application of cloud computing in industrial control schemes. According to the existing metallurgical industry control architecture, this paper proposes a structure of a metallurgical industry {CCS}. By analyzing the internal characteristics of the system, the system delay is decomposed into cloud delay and network delay, and the {CCS} time-delay model is obtained. Based on the established metallurgical industry {CCS} time-delay model, we design the delay controller by using state feedback and pole configuration methods, and propose a detailed internal structure model of the system. Finally, the typical links are simulated according to common signals in the metallurgical industry. The results show that the designed delay controller significantly improves the control performance of the metallurgical {CCS}.},
	eventtitle = {2020 Chinese Automation Congress ({CAC})},
	pages = {7321--7326},
	booktitle = {2020 Chinese Automation Congress ({CAC})},
	author = {Wu, Boning and Wu, Xindi and Yang, Jianhua},
	date = {2020-11},
	note = {{ISSN}: 2688-0938},
	keywords = {Control systems, Delays, Cloud computing, cloud control system, Industries, metallurgical industry, Process control, Production, state feedback, Task analysis, time-delay},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/R7NBRKG3/Wu et al. - 2020 - Research on Architecture and Time-delay of Metallu.pdf:application/pdf},
}

@article{cucuzzella_robust_2019,
	title = {A Robust Consensus Algorithm for Current Sharing and Voltage Regulation in {DC} Microgrids},
	volume = {27},
	issn = {1558-0865},
	doi = {10.1109/TCST.2018.2834878},
	abstract = {In this paper, a novel distributed control algorithm for current sharing and voltage regulation in {DC} microgrids is proposed. The {DC} microgrid is composed of several distributed generation units, including buck converters and current loads. The considered model permits an arbitrary network topology and is affected by an unknown load demand and modeling uncertainties. The proposed control strategy exploits a communication network to achieve proportional current sharing using a consensus-like algorithm. Voltage regulation is achieved by constraining the system to a suitable manifold. Two robust control strategies of sliding mode type are developed to reach the desired manifold in a finite time. The proposed control scheme is formally analyzed, proving the achievement of proportional current sharing, while guaranteeing that the weighted average voltage of the microgrid is identical to the weighted average of the voltage references.},
	pages = {1583--1595},
	number = {4},
	journaltitle = {{IEEE} Transactions on Control Systems Technology},
	author = {Cucuzzella, Michele and Trip, Sebastian and De Persis, Claudio and Cheng, Xiaodong and Ferrara, Antonella and van der Schaft, Arjan},
	date = {2019-07},
	note = {Conference Name: {IEEE} Transactions on Control Systems Technology},
	keywords = {Microgrids, Current sharing, {DC} microgrids, Load modeling, Manifolds, Network topology, Robustness, sliding mode ({SM}) control, Steady-state, uncertain systems, Voltage control, voltage regulation},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/NRF4ZGWW/Cucuzzella et al. - 2019 - A Robust Consensus Algorithm for Current Sharing a.pdf:application/pdf},
}

@inproceedings{plasberg_towards_2022,
	title = {Towards Distributed Real-Time capable Robotic Control using {ROS}2},
	doi = {10.1109/CASE49997.2022.9926569},
	abstract = {While controllers for modern robots often appear to users as monolithic black-boxes, approaches exist to write custom controllers and tune them with tools from community based frameworks. Using {ROS}2 as such a framework, single components and parameters can be exchanged and customized easily. Especially in research institutions but also in industrial environments this framework is used increasingly to fulfill the demanding requirements of robotic control. While {ROS}1 had no real-time capable method of communication, {ROS}2 promises to give this advantage. Matching the trend to use many distributed, specialized and small systems instead of one higly system-specific, inflexible system, this study assesses tuning of {DDS} parameters in order to improve communication speed.},
	eventtitle = {2022 {IEEE} 18th International Conference on Automation Science and Engineering ({CASE})},
	pages = {2205--2210},
	booktitle = {2022 {IEEE} 18th International Conference on Automation Science and Engineering ({CASE})},
	author = {Plasberg, C. and Nessau, H. and Timmermann, D. and Eichmann, C. and Roennau, A. and Dillmann, R.},
	date = {2022-08},
	note = {{ISSN}: 2161-8089},
	keywords = {Real-time systems, Service robots, Automation, Computer aided software engineering, Market research, Tuning},
	file = {IEEE Xplore Abstract Record:/home/manuelm/Zotero/storage/SBVRI2VX/9926569.html:text/html;IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/F7DDR3K9/Plasberg et al. - 2022 - Towards Distributed Real-Time capable Robotic Cont.pdf:application/pdf},
}

@article{quigley_ros_nodate,
	title = {{ROS}: an open-source Robot Operating System},
	abstract = {This paper gives an overview of {ROS}, an opensource robot operating system. {ROS} is not an operating system in the traditional sense of process management and scheduling; rather, it provides a structured communications layer above the host operating systems of a heterogenous compute cluster. In this paper, we discuss how {ROS} relates to existing robot software frameworks, and brieﬂy overview some of the available application software which uses {ROS}.},
	author = {Quigley, Morgan and Gerkey, Brian and Conley, Ken and Faust, Josh and Foote, Tully and Leibs, Jeremy and Berger, Eric and Wheeler, Rob and Ng, Andrew},
	langid = {english},
	file = {Quigley et al. - ROS an open-source Robot Operating System.pdf:/home/manuelm/Zotero/storage/UN2ITUSZ/Quigley et al. - ROS an open-source Robot Operating System.pdf:application/pdf},
}

@online{noauthor_ros_nodate,
	title = {{ROS} - Robot Operating System},
	url = {https://www.ros.org/},
	urldate = {2023-04-11},
	file = {ROS\: Home:/home/manuelm/Zotero/storage/DQVEZRLJ/www.ros.org.html:text/html},
}

@article{chitta_ros_control_2017,
	title = {ros\_control: A generic and simple control framework for {ROS}},
	volume = {2},
	issn = {2475-9066},
	url = {https://joss.theoj.org/papers/10.21105/joss.00456},
	doi = {10.21105/joss.00456},
	shorttitle = {ros\_control},
	abstract = {Chitta et al, (2017), ros\_control: A generic and simple control framework for {ROS}, Journal of Open Source Software, 2(20), 456, doi:10.21105/joss.00456},
	pages = {456},
	number = {20},
	journaltitle = {Journal of Open Source Software},
	author = {Chitta, Sachin and Marder-Eppstein, Eitan and Meeussen, Wim and Pradeep, Vijay and Tsouroukdissian, Adolfo Rodríguez and Bohren, Jonathan and Coleman, David and Magyar, Bence and Raiola, Gennaro and Lüdtke, Mathias and Perdomo, Enrique Fernandez},
	urldate = {2023-04-12},
	date = {2017-12-04},
	langid = {english},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/T38ZXXBV/Chitta et al. - 2017 - ros_control A generic and simple control framewor.pdf:application/pdf},
}

@article{lages_remote_2022,
	title = {Remote Teaching of Dynamics and Control of Robots Using {ROS} 2},
	volume = {55},
	issn = {2405-8963},
	url = {https://www.sciencedirect.com/science/article/pii/S2405896322015348},
	doi = {10.1016/j.ifacol.2022.09.292},
	series = {13th {IFAC} Symposium on Advances in Control Education {ACE} 2022},
	abstract = {This paper presents the use of {ROS} 2 as a support platform for the Dynamics and Control of Robots course at the School of Engineering of the Universidade Federal do Rio Grande do Sul, Brazil. The organization of the course is presented and the autonomous activities performed by students at home using {ROS} 2 are described in detail, including some pitfalls that should be avoided. The results show that {ROS} 2 is mature enough for production use, at least in an academic environment and that students are able to use sophisticated robotic tools even in undergraduate courses.},
	pages = {279--284},
	number = {17},
	journaltitle = {{IFAC}-{PapersOnLine}},
	shortjournal = {{IFAC}-{PapersOnLine}},
	author = {Lages, Walter Fetter},
	urldate = {2023-04-12},
	date = {2022-01-01},
	langid = {english},
	keywords = {Robotics, Robot control, Mobile robots, Remote teaching, Robot Operating System, Robotic manipulation, {ROS} 2},
	file = {ScienceDirect Full Text PDF:/home/manuelm/Zotero/storage/X8WLTVSE/Lages - 2022 - Remote Teaching of Dynamics and Control of Robots .pdf:application/pdf;ScienceDirect Snapshot:/home/manuelm/Zotero/storage/G3G526YN/S2405896322015348.html:text/html},
}

@article{lages_joint_2022,
	title = {Joint Level Adaptive Control for Mobile Robots in {ROS} 2},
	volume = {55},
	issn = {2405-8963},
	url = {https://www.sciencedirect.com/science/article/pii/S2405896323001593},
	doi = {10.1016/j.ifacol.2023.01.151},
	series = {13th {IFAC} Symposium on Robot Control {SYROCO} 2022},
	abstract = {This paper proposes an adaptive controller for mobile robots using the navigation framework of the Robot Operating System. The navigation framework implements a kinematic controller which considers kinematic constraints such as robot nonholonomic constraints and obstacles and outputs linear and angular velocity commands to be implemented by the joint level controller. Usually the joint level relies on velocity servos, which neglect the dynamics of the robot or {PID} controllers, which are difficult to tune, due to the nonlinear model and unknown parameters of the model. The proposed model reference adaptive controller accepts velocities references, as required by the navigation framework and outputs the wheel torques to impose the commanded velocities. A formal proof of stability including the robot dynamics, controller and adaptation law is provided. Although it is not proved, as it depends on persistence of excitation on the reference signal, experimental results shows that the estimated parameters converge to values close to the actual ones.},
	pages = {172--177},
	number = {38},
	journaltitle = {{IFAC}-{PapersOnLine}},
	shortjournal = {{IFAC}-{PapersOnLine}},
	author = {Lages, Walter Fetter},
	urldate = {2023-04-12},
	date = {2022-01-01},
	langid = {english},
	keywords = {Mobile robots, {ROS} 2, Adaptive control, Dynamic model, Joint control, Linearizing control, Model reference, Navigation},
	file = {ScienceDirect Full Text PDF:/home/manuelm/Zotero/storage/KK5LTINJ/Lages - 2022 - Joint Level Adaptive Control for Mobile Robots in .pdf:application/pdf},
}

@inproceedings{shibuya_seamless_2022,
	title = {Seamless Rapid Prototyping with Docker Container for Mobile Robot Development},
	doi = {10.23919/SICE56594.2022.9905781},
	abstract = {This paper describes seamless rapid prototyping using Docker Container for developing mobile robots with waypoint navigation capabilities as an example of seamless rapid prototyping, we show how to migrate from an existing {ROS}-based Lidar {SLAM} mobile robot to a {ROS}2-based system with waypoint navigation capabilities. Between {ROS} and {ROS}2, there are many implementation issues related to the simulation environment called Gazebo, there are differences. Therefore, we will create a new sdf file for the mobile robot model and an urdf file for Gazebo to overcome the differences between the {ROS} and Gazebo implementations. The integration of these files with the new Navigation2 software for {SLAM} navigation has been successfully implemented in the developed Gazebo simulation environment.},
	eventtitle = {2022 61st Annual Conference of the Society of Instrument and Control Engineers ({SICE})},
	pages = {1063--1068},
	booktitle = {2022 61st Annual Conference of the Society of Instrument and Control Engineers ({SICE})},
	author = {Shibuya, Shunki and Kobayashi, Kazuyuki and Ohkubo, Tomoyuki and Watanabe, Kajiro and Tian, Kaiqiao and Sebi, Nashwan J and Cheok, Ka C},
	date = {2022-09},
	keywords = {{ROS}2, Navigation, 2D {LiDAR}, autonomous mobile robot, Containers, Instruments, Laser radar, Rapid prototyping, Shape, Simultaneous localization and mapping},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/AS7DV299/Shibuya et al. - 2022 - Seamless Rapid Prototyping with Docker Container f.pdf:application/pdf},
}

@thesis{catota_paredes_estudio_2022,
	title = {Estudio, control e implementación de sistemas robóticos avanzados: implementación de un Robot Paralelo virtual en base a la plataforma que está siendo empleada en el proyecto de investigación grupal {PIGR}-20-01.},
	rights = {{openAccess}},
	url = {http://bibdigital.epn.edu.ec/handle/15000/23260},
	shorttitle = {Estudio, control e implementación de sistemas robóticos avanzados},
	abstract = {This work is part of the Group Research Project {PIGR}-20-01, in which a parallel robot has been implemented focused on the treatment and rehabilitation of the knee. The problem to be solved is centered on the need to have a virtual parallel robot that allows testing on it, the different types of controllers designed for the physical robot. Nowadays, robotics is in continuous evolution and its needs change to face new challenges. In the field of robotics to cope with its continuous evolution has developed an operating system dedicated to robots, called {ROS} (Robot Operating System), which has a wide range of tools and libraries for the creation and manipulation of various robotic models. Therefore, in this work the {ROS}2 software and the {GAZEBO} simulator are used. In particular, the existing base files of the robot, developed in {ROS}, are analyzed to migrate them to {ROS}2, and to design a {URDF} structure that allows the implementation of the different parts created for the conformation of the robot. In addition, using the dynamic and kinematic models, {PID} controllers are designed and tuned for each of the actuators of the robot, as well as a control scheme that unifies them, to command the mobile platform to a desired position. To verify the operation, tests are performed by adding perturbations in the simulation environment and analyzing the performance of the control system so that the parallel robot can maintain or reach a desired position.},
	institution = {Quito : {EPN}, 2022.},
	type = {{bachelorThesis}},
	author = {Catota Paredes, Jonathan Paul},
	urldate = {2023-04-12},
	date = {2022-10},
	note = {Accepted: 2022-10-26T16:12:36Z},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/RPH2H4J4/Catota Paredes - 2022 - Estudio, control e implementación de sistemas robó.pdf:application/pdf},
}

@inproceedings{arcos_ros2_2022,
	title = {A {ROS}2 based Trajectory Tracking Controller of a 3UPS-1RPU Parallel Robot for Knee Rehabilitation},
	doi = {10.1109/ETCM56276.2022.9935755},
	abstract = {The current paper analyzes the kinematics of a 3UPS/{RPU} parallel robot and proposes a control focused on trajectory tracking of a virtual and real prototype of the aforementioned robot for knee and ankle rehabilitation. A {PD} control with gravity compensation are proposed. The position of the robot actuators along with the communication and control systems are implemented on {ROS}2 (Robotic Operating System). By using a predefined trajectory, the results demonstrate the robustness of the controller to keep the platform stable and the actuators following the desired reference.},
	eventtitle = {2022 {IEEE} Sixth Ecuador Technical Chapters Meeting ({ETCM})},
	pages = {1--6},
	booktitle = {2022 {IEEE} Sixth Ecuador Technical Chapters Meeting ({ETCM})},
	author = {Arcos, Luis and Vicente, Kleber and Cruz, Patricio and Abad, Jacqueline and Zambrano, Ivan},
	date = {2022-10},
	keywords = {{ROS}2, Robot kinematics, Actuators, 3UPS-1RPU, Measurement uncertainty, Meters, parallel robot, Parallel robots, Robot vision systems, Trajectory tracking},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/VMZ68NDA/Arcos et al. - 2022 - A ROS2 based Trajectory Tracking Controller of a 3.pdf:application/pdf},
}

@article{storiale_robot-agnostic_2022,
	title = {Robot-Agnostic Interaction Controllers Based on {ROS}},
	volume = {12},
	rights = {http://creativecommons.org/licenses/by/3.0/},
	issn = {2076-3417},
	url = {https://www.mdpi.com/2076-3417/12/8/3949},
	doi = {10.3390/app12083949},
	abstract = {In robotized industrial scenarios, the need for efficiency and flexibility is increasing, especially when tasks must be executed in dangerous environments and/or require the simultaneous manipulation of dangerous/fragile objects by multiple heterogeneous robots. However, the underlying hardware and software architecture is typically characterized by constraints imposed by the robots’ manufacturers, which complicates their integration and deployment. This work aims to demonstrate that widely used algorithms for robotics, such as interaction control, can be made independent of the hardware architecture, abstraction level, and functionality provided by the low-level proprietary controllers. As a consequence, a robot-independent control framework can be devised, which reduces the time and effort needed to configure the robotic system and adapt it to changing requirements. Robot-agnostic interaction controllers are implemented on top of the Robot Operating System ({ROS}) and made freely available to the robotic community. Experiments were performed on the Universal Robots {UR}10 research robot, the Comau Smart-Six industrial robot, and their digital twins, so as to demonstrate that the proposed control algorithms can be easily deployed on different hardware and simulators without reprogramming.},
	pages = {3949},
	number = {8},
	journaltitle = {Applied Sciences},
	author = {Storiale, Federica and Ferrentino, Enrico and Chiacchio, Pasquale},
	urldate = {2023-04-12},
	date = {2022-01},
	langid = {english},
	note = {Number: 8
Publisher: Multidisciplinary Digital Publishing Institute},
	keywords = {{ROS}, digital twin, industrial robot, interaction control, robotic software framework},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/LVG49KPI/Storiale et al. - 2022 - Robot-Agnostic Interaction Controllers Based on RO.pdf:application/pdf},
}

@book{rico_concise_2022,
	title = {A Concise Introduction to Robot Programming with {ROS}2},
	isbn = {978-1-00-062981-1},
	abstract = {A Concise Introduction to Robot Programming with {ROS}2 provides the reader with the concepts and tools necessary to bring a robot to life through programming. It will equip the reader with the skills necessary to undertake projects with {ROS}2, the new version of {ROS}. It is not necessary to have previous experience with {ROS}2 as it will describe its concepts, tools, and methodologies from the beginning. Key Features  Uses the two programming languages officially supported in {ROS}2 (C++, mainly, and Python) Approaches {ROS}2 from three different but complementary dimensions: the Community, Computation Graph, and the Workspace Includes a complete simulated robot, development and testing strategies, Behavior Trees, and Nav2 description, setup, and use A {GitHub} repository with code to assist readers It will appeal to motivated engineering students, engineers, and professionals working with robot programming.},
	pagetotal = {254},
	publisher = {{CRC} Press},
	author = {Rico, Francisco Martín},
	date = {2022-09-30},
	langid = {english},
	note = {Google-Books-{ID}: {iCKIEAAAQBAJ}},
	keywords = {Computers / Artificial Intelligence / General, Computers / Computer Engineering, Computers / Computer Science, Computers / Programming / Algorithms, Computers / Programming / Games, Computers / Programming / General, Technology \& Engineering / Robotics},
}

@inproceedings{liu_formal_2018-1,
	title = {Formal Analysis and Verification of {DDS} in {ROS}2},
	doi = {10.1109/MEMCOD.2018.8556970},
	abstract = {Robot Operating System({ROS}) is widely used in the development of various service robots, which have high requirements in safety and reliability. Data distribution service({DDS}) is deployed in {ROS}2 to implement the control of nodes and data distribution, which is very important for the operation of application on {ROS}2. In this paper, we focus on model abstraction, formal modeling and automatic verification for {DDS} in {ROS}2. A distributed model with interface parameters was established in {PRISM}. Properties such as security, liveness and priority of {DDS} in {ROS}2 were verified. The results show that the design satisfies these properties and high-priority messages can be sent and transmitted preferentially by the system. Due to the experiment result, we come up with a suggestion that the system will be better if its buffer can store six messages or more.},
	eventtitle = {2018 16th {ACM}/{IEEE} International Conference on Formal Methods and Models for System Design ({MEMOCODE})},
	pages = {1--5},
	booktitle = {2018 16th {ACM}/{IEEE} International Conference on Formal Methods and Models for System Design ({MEMOCODE})},
	author = {Liu, Yanan and Guan, Yong and Li, Xiaojuan and Wang, Rui and Zhang, Jie},
	date = {2018-10},
	keywords = {publish/subscribe, Service robots, Automata, {DDS}, model checking, Probabilistic logic, probabilistic timed automata, Publishing, {ROS}, Safety, Security, System recovery},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/YDB3H9DT/Liu et al. - 2018 - Formal Analysis and Verification of DDS in ROS2.pdf:application/pdf},
}

@misc{kim_security_2018,
	title = {Security and Performance Considerations in {ROS} 2: A Balancing Act},
	url = {http://arxiv.org/abs/1809.09566},
	doi = {10.48550/arXiv.1809.09566},
	shorttitle = {Security and Performance Considerations in {ROS} 2},
	abstract = {Robot Operating System ({ROS}) 2 is a ground-up re-design of {ROS} 1 to support performance critical cyber-physical systems ({CPSs}) using the Data Distribution Service ({DDS}) middleware. Accordingly, the security of {ROS} 2 is highly reliant on the security of its {DDS} communication protocol. However, finding a balance between the performance and security is non-trivial task. Inappropriate security implementations may cause not only significant loss on performance of the system, but also security failures in the system. In this paper, we provide an analysis of the {DDS} security protocol as well as an overview on how to find the balance between performance and security. To accomplish this, we evaluate the latency and throughput of the communication protocols of {ROS} 2 in both wired and wireless networks, and measure the efficiency loss caused by the enabling of security protocols such as Virtual Private Network ({VPN}) and {DDS} security protocol in {ROS} 2 in both network setups. The result can be directly used by robotics developers to find the optimal and balanced settings of {ROS} 2 applications. Additionally, we analyzed the security specification of {DDS} using existing security standards and tested the implementation of the {DDS} protocol by performing static analysis. The results of this work can be used to enhance the security of {ROS} 2.},
	number = {{arXiv}:1809.09566},
	publisher = {{arXiv}},
	author = {Kim, Jongkil and Smereka, Jonathon M. and Cheung, Calvin and Nepal, Surya and Grobler, Marthie},
	urldate = {2023-04-12},
	date = {2018-09-24},
	eprinttype = {arxiv},
	eprint = {1809.09566 [cs]},
	keywords = {Computer Science - Cryptography and Security, Computer Science - Networking and Internet Architecture, Computer Science - Robotics},
	file = {arXiv Fulltext PDF:/home/manuelm/Zotero/storage/Y23AYJ63/Kim et al. - 2018 - Security and Performance Considerations in ROS 2 .pdf:application/pdf;arXiv.org Snapshot:/home/manuelm/Zotero/storage/ZTKSZRHT/1809.html:text/html},
}

@inproceedings{zhang_distributed_2022,
	title = {Distributed Robotic Systems in the Edge-Cloud Continuum with {ROS} 2: a Review on Novel Architectures and Technology Readiness},
	doi = {10.1109/FMEC57183.2022.10062523},
	shorttitle = {Distributed Robotic Systems in the Edge-Cloud Continuum with {ROS} 2},
	abstract = {Robotic systems are more connected, networked, and distributed than ever. New architectures that comply with the de facto robotics middleware standard, {ROS} 2, have recently emerged to fill the gap in terms of hybrid systems deployed from edge to cloud. This paper reviews new architectures and technologies that enable containerized robotic applications to seamlessly run at the edge or in the cloud. We also overview systems that include solutions from extension to {ROS} 2 tooling to the integration of Kubernetes and {ROS} 2. Another important trend is robot learning, and how new simulators and cloud simulations are enabling, e.g., large-scale reinforcement learning or distributed federated learning solutions. This has also enabled deeper integration of continuous interaction and continuous deployment ({CI}/{CD}) pipelines for robotic systems development, going beyond standard software unit tests with simulated tests to build and validate code automatically. We discuss the current technology readiness and list the potential new application scenarios that are becoming available. Finally, we discuss the current challenges in distributed robotic systems and list open research questions in the field.},
	eventtitle = {2022 Seventh International Conference on Fog and Mobile Edge Computing ({FMEC})},
	pages = {1--8},
	booktitle = {2022 Seventh International Conference on Fog and Mobile Edge Computing ({FMEC})},
	author = {Zhang, Jiaqiang and Keramat, Farhad and Yu, Xianjia and Hernández, Daniel Montero and Queralta, Jorge Peña and Westerlund, Tomi},
	date = {2022-12},
	keywords = {Robotics, Market research, Computer architecture, Reinforcement learning, {ROS} 2, Cloud robotics, Computational offloading, Containerization, Distributed Robotic Systems, Edge computing, Edge-Cloud Continuum, Federated learning, Multi-access edge computing, Pipelines, Robot learning},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/LEG42JZ6/Zhang et al. - 2022 - Distributed Robotic Systems in the Edge-Cloud Cont.pdf:application/pdf},
}

@inproceedings{yang_exploring_2020,
	title = {Exploring Real-Time Executor on {ROS} 2},
	doi = {10.1109/ICESS49830.2020.9301530},
	abstract = {With the recent developments in robotics research, autonomous robot systems have grown rapidly to meet the increasing demands. The Robot Operating System ({ROS}) is commonly used for building autonomous robot systems. Due to the high latency in communication, {ROS} has been upgraded to {ROS} 2 using the Data Distribution Service ({DDS}) as a transport system. In {ROS} 2, an Executor concept was introduced to support execution management and ensure real-time performance. However, it is difficult to improve the real-time performance of {ROS} 2. A real-time executor called the Callback-group-level Executor has been developed in micro-{ROS}. In this paper, the Callback-grouplevel Executor was used to replace the standard rclcpp Executor in {ROS} 2, and explore the resulting performance. Using the pingpong test bench, the potential and constraints of the real-time executor on {ROS} 2 were also examined and evaluated.},
	eventtitle = {2020 {IEEE} International Conference on Embedded Software and Systems ({ICESS})},
	pages = {1--8},
	booktitle = {2020 {IEEE} International Conference on Embedded Software and Systems ({ICESS})},
	author = {Yang, Yuqing and Azumi, Takuya},
	date = {2020-12},
	keywords = {Operating systems, Real-time systems, Autonomous robots, Libraries, Message systems, Middleware, Standards},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/KHZ8SLXB/Yang and Azumi - 2020 - Exploring Real-Time Executor on ROS 2.pdf:application/pdf},
}

@inproceedings{mayoral-vilches_sros2_2022,
	title = {{SROS}2: Usable Cyber Security Tools for {ROS} 2},
	doi = {10.1109/IROS47612.2022.9982129},
	shorttitle = {{SROS}2},
	abstract = {{ROS} 2 is rapidly becoming a standard in the robotics industry. Built upon {DDS} as its default communication middleware and used in safety-critical scenarios, adding secu-rity to robots and {ROS} computational graphs is increasingly becoming a concern. The present work introduces {SROS}2, a series of developer tools and libraries that facilitate adding security to {ROS} 2 graphs. Focusing on a usability-centric approach in {SROS}2, we present a methodology for securing graphs systematically while following the {DevSecOps} model. We also demonstrate the use of our security tools by presenting an application case study that considers securing a graph using the popular Navigation2 and {SLAM} Toolbox stacks applied in a {TurtieBot}3 robot. We analyse the current capabilities of {SROS}2 and discuss the shortcomings, which provides insights for future contributions and extensions. Ultimately, we present {SROS}2 as usable security tools for {ROS} 2 and argue that without usability, security in robotics will be greatly impaired.},
	eventtitle = {2022 {IEEE}/{RSJ} International Conference on Intelligent Robots and Systems ({IROS})},
	pages = {11253--11259},
	booktitle = {2022 {IEEE}/{RSJ} International Conference on Intelligent Robots and Systems ({IROS})},
	author = {Mayoral-Vilches, Victor and White, Ruffin and Caiazza, Gianluca and Arguedas, Mikael},
	date = {2022-10},
	note = {{ISSN}: 2153-0866},
	keywords = {Service robots, Security, Computational modeling, Navigation, Middleware, Authentication, Usability},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/FGJ6336V/Mayoral-Vilches et al. - 2022 - SROS2 Usable Cyber Security Tools for ROS 2.pdf:application/pdf},
}

@book{kopetz_real-time_2022,
	title = {Real-Time Systems: Design Principles for Distributed Embedded Applications},
	isbn = {978-3-031-11992-7},
	shorttitle = {Real-Time Systems},
	abstract = {"This book is a comprehensive text for the design of safety critical, hard real-time embedded systems. It offers a splendid example for the balanced, integrated treatment of systems and software engineering, helping readers tackle the hardest problems of advanced real-time system design, such as determinism, compositionality, timing and fault management. This book is an essential reading for advanced undergraduates and graduate students in a wide range of disciplines impacted by embedded computing and software. Its conceptual clarity, the style of explanations and the examples make the abstract concepts accessible for a wide audience."Janos Sztipanovits, {DirectorE}. Bronson Ingram Distinguished Professor of {EngineeringInstitute} for Software Integrated {SystemsVanderbilt} {UniversityReal}-Time Systems focuses on hard real-time systems, which are computing systems that must meet their temporal specification in all anticipated load and fault scenarios. The book stresses the system aspects of distributed real-time applications, treating the issues of real-time, distribution and fault-tolerance from an integral point of view. A unique cross-fertilization of ideas and concepts between the academic and industrial worlds has led to the inclusion of many insightful examples from industry to explain the fundamental scientific concepts in a real-world setting. Compared to the Second Edition, new developments in communication standards for time-sensitive networks, such as {TSN} and Time-Triggered Ethernet are addressed. Furthermore, this edition includes a new chapter on real-time aspects in cloud and fog computing.The book is written as a standard textbook for a high-level undergraduate or graduate course on real-time embedded systems or cyber-physical systems. Its practical approach to solving real-time problems, along with numerous summary exercises, makes it an excellent choice for researchers and practitioners alike.},
	pagetotal = {411},
	publisher = {Springer Nature},
	author = {Kopetz, Hermann and Steiner, Wilfried},
	date = {2022-09-22},
	langid = {english},
	note = {Google-Books-{ID}: 36iLEAAAQBAJ},
	keywords = {Computers / Artificial Intelligence / Expert Systems, Computers / Hardware / Cell Phones \& Devices, Computers / Operating Systems / General, Computers / Software Development \& Engineering / Systems Analysis \& Design, Technology \& Engineering / Electrical, Technology \& Engineering / Electronics / Circuits / General},
}

@article{tataria_6g_2021,
	title = {6G Wireless Systems: Vision, Requirements, Challenges, Insights, and Opportunities},
	volume = {109},
	issn = {1558-2256},
	doi = {10.1109/JPROC.2021.3061701},
	shorttitle = {6G Wireless Systems},
	abstract = {Mobile communications have been undergoing a generational change every ten years or so. However, the time difference between the so-called “G's” is also decreasing. While fifth-generation (5G) systems are becoming a commercial reality, there is already significant interest in systems beyond 5G, which we refer to as the sixth generation (6G) of wireless systems. In contrast to the already published papers on the topic, we take a top-down approach to 6G. More precisely, we present a holistic discussion of 6G systems beginning with lifestyle and societal changes driving the need for next-generation networks. This is followed by a discussion into the technical requirements needed to enable 6G applications, based on which we dissect key challenges and possibilities for practically realizable system solutions across all layers of the Open Systems Interconnection stack (i.e., from applications to the physical layer). Since many of the 6G applications will need access to an order-of-magnitude more spectrum, utilization of frequencies between 100 {GHz} and 1 {THz} becomes of paramount importance. As such, the 6G ecosystem will feature a diverse range of frequency bands, ranging from below 6 {GHz} up to 1 {THz}. We comprehensively characterize the limitations that must be overcome to realize working systems in these bands and provide a unique perspective on the physical and higher layer challenges relating to the design of next-generation core networks, new modulation and coding methods, novel multiple-access techniques, antenna arrays, wave propagation, radio frequency transceiver design, and real-time signal processing. We rigorously discuss the fundamental changes required in the core networks of the future, such as the redesign or significant reduction of the transport architecture that serves as a major source of latency for time-sensitive applications. This is in sharp contrast to the present hierarchical network architectures that are not suitable to realize many of the anticipated 6G services. While evaluating the strengths and weaknesses of key candidate 6G technologies, we differentiate what may be practically achievable over the next decade, relative to what is possible in theory. Keeping this in mind, we present concrete research challenges for each of the discussed system aspects, providing inspiration for what follows.},
	pages = {1166--1199},
	number = {7},
	journaltitle = {Proceedings of the {IEEE}},
	author = {Tataria, Harsh and Shafi, Mansoor and Molisch, Andreas F. and Dohler, Mischa and Sjöland, Henrik and Tufvesson, Fredrik},
	date = {2021-07},
	note = {Conference Name: Proceedings of the {IEEE}},
	keywords = {6G mobile communication, Array signal processing, Beamforming, Massive {MIMO}, Next generation working, next-generation core network, Physical layer, physical layer ({PHY}), Radio frequency, radio frequency ({RF}) transceivers, signal processing, Signal processing, sixth-generation (6G), terahertz ({THz}), Transceivers, ultramassive multiple-input multiple-output ({MIMO}), waveforms},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/YHTRBDYH/Tataria et al. - 2021 - 6G Wireless Systems Vision, Requirements, Challen.pdf:application/pdf},
}

@article{nasrallah_ultra-low_2019,
	title = {Ultra-Low Latency ({ULL}) Networks: The {IEEE} {TSN} and {IETF} {DetNet} Standards and Related 5G {ULL} Research},
	volume = {21},
	issn = {1553-877X},
	doi = {10.1109/COMST.2018.2869350},
	shorttitle = {Ultra-Low Latency ({ULL}) Networks},
	abstract = {Many network applications, e.g., industrial control, demand ultra-low latency ({ULL}). However, traditional packet networks can only reduce the end-to-end latencies to the order of tens of milliseconds. The {IEEE} 802.1 time sensitive networking ({TSN}) standard and related research studies have sought to provide link layer support for {ULL} networking, while the emerging {IETF} deterministic networking ({DetNet}) standards seek to provide the complementary network layer {ULL} support. This paper provides an up-to-date comprehensive survey of the {IEEE} {TSN} and {IETF} {DetNet} standards and the related research studies. The survey of these standards and research studies is organized according to the main categories of flow concept, flow synchronization, flow management, flow control, and flow integrity. {ULL} networking mechanisms play a critical role in the emerging fifth generation (5G) network access chain from wireless devices via access, backhaul, and core networks. We survey the studies that specifically target the support of {ULL} in 5G networks, with the main categories of fronthaul, backhaul, and network management. Throughout, we identify the pitfalls and limitations of the existing standards and research studies. This survey can thus serve as a basis for the development of standards enhancements and future {ULL} research studies that address the identified pitfalls and limitations.},
	pages = {88--145},
	number = {1},
	journaltitle = {{IEEE} Communications Surveys \& Tutorials},
	author = {Nasrallah, Ahmed and Thyagaturu, Akhilesh S. and Alharbi, Ziyad and Wang, Cuixiang and Shao, Xing and Reisslein, Martin and {ElBakoury}, Hesham},
	date = {2019},
	note = {Conference Name: {IEEE} Communications Surveys \& Tutorials},
	keywords = {Protocols, Quality of service, Jitter, Wireless communication, Delays, 5G mobile communication, Deterministic networking ({DetNet}), preemption, time synchronization, time-sensitive networking ({TSN}), ultra-low delay},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/Q4ZH32TE/Nasrallah et al. - 2019 - Ultra-Low Latency (ULL) Networks The IEEE TSN and.pdf:application/pdf},
}

@inproceedings{lin_bsn_2018,
	title = {{BSN}: Boundary Sensitive Network for Temporal Action Proposal Generation},
	url = {https://openaccess.thecvf.com/content_ECCV_2018/html/Tianwei_Lin_BSN_Boundary_Sensitive_ECCV_2018_paper.html},
	shorttitle = {{BSN}},
	eventtitle = {Proceedings of the European Conference on Computer Vision ({ECCV})},
	pages = {3--19},
	author = {Lin, Tianwei and Zhao, Xu and Su, Haisheng and Wang, Chongjing and Yang, Ming},
	urldate = {2023-04-12},
	date = {2018},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/MJKWR4D4/Lin et al. - 2018 - BSN Boundary Sensitive Network for Temporal Actio.pdf:application/pdf},
}

@article{ramezan_mining_2022,
	title = {A Mining Strategy for Minimizing Waiting Time in Blockchains for Time-Sensitive Applications},
	volume = {2022},
	issn = {1530-8669},
	url = {https://www.hindawi.com/journals/wcmc/2022/4352406/},
	doi = {10.1155/2022/4352406},
	abstract = {Blockchain, as proposed in Bitcoin, focuses on securing financial transactions. However, in recent years, the use of blockchain has expanded to a wide range of networks and application domains. This includes time-sensitive applications which need transactions to be processed fast enough to meet delay requirements. Reducing the transaction waiting time in the mining process is key to the successful adoption of blockchain in such applications. In this paper, we propose a mining strategy that is aimed at minimizing the average waiting time per transaction by ensuring a certain minimum required block size, based on the average transaction arrival rate, mining service rate, and maximum block size. We derive an expression for the average transaction waiting time of the proposed mining strategy and determine the optimal mining rule. Numerical results show that the average waiting time per transaction can be reduced by up to using the proposed mining strategy compared to the traditional strategy in which miners immediately start the next mining round using the transactions already waiting in the pool.},
	pages = {e4352406},
	journaltitle = {Wireless Communications and Mobile Computing},
	author = {Ramezan, Gholamreza and Leung, Cyril and Miao, Chunyan},
	urldate = {2023-04-12},
	date = {2022-03-09},
	langid = {english},
	note = {Publisher: Hindawi},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/UE2ZVMZJ/Ramezan et al. - 2022 - A Mining Strategy for Minimizing Waiting Time in B.pdf:application/pdf},
}

@article{agarwal_time-sensitive_2021,
	title = {A time-sensitive networking-enabled synchronized three-phase and phasor measurement-based monitoring system for microgrids},
	volume = {6},
	issn = {2398-3396},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1049/cps2.12001},
	doi = {10.1049/cps2.12001},
	abstract = {This paper presents the design and implementation of a Time-Sensitive Networking ({TSN}) protocol-enabled synchronized measurement-based monitoring system for microgrids. The proposed approach synchronizes and prioritizes the communication nodes, allowing it to transfer ultra-high three-phase sampled data and phasors. {TSN} is achieved by Quality of Service ({QoS}) profile software library. This allows control, monitoring, traffic scheduling, and prioritization. Some buses in a microgrid may have priority over others; and this can be prioritized at the data level too, where a part of the information is more critical than the others. The advantages of utilizing the {TSN} protocol on a microgrid with the approach proposed are: it is an alternative to {GPS} technology, three-phase data can be exchanged at much faster rate and data traffic in the network can be shaped with low packet loss, and low latency, in addition to providing interoperability through Data Distribution Services ({DDS}). These enhancements improve the communication reliability and enable distributed control, resulting in avoidance of any bottlenecks in the communications network. This proposed approach is implemented and demonstrated in a laboratory-scale microgrid. The results obtained, verify low latency and high throughput of the entire system while meeting the {TSN} and {QoS} requirements.},
	pages = {1--11},
	number = {1},
	journaltitle = {{IET} Cyber-Physical Systems: Theory \& Applications},
	author = {Agarwal, Tanushree and Niknejad, Payam and Rahmani, Fatemeh and Barzegaran, Mohammadreza and Vanfretti, Luigi},
	urldate = {2023-04-12},
	date = {2021},
	langid = {english},
	note = {\_eprint: https://onlinelibrary.wiley.com/doi/pdf/10.1049/cps2.12001},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/UFRYM26B/Agarwal et al. - 2021 - A time-sensitive networking-enabled synchronized t.pdf:application/pdf},
}

@misc{gutierrez_time-sensitive_2018,
	title = {Time-Sensitive Networking for robotics},
	url = {http://arxiv.org/abs/1804.07643},
	doi = {10.48550/arXiv.1804.07643},
	abstract = {We argue that Time-Sensitive Networking ({TSN}) will become the de facto standard for real-time communications in robotics. We present a review and classification of the different communication standards which are relevant for the field and introduce the typical problems with traditional switched Ethernet networks. We discuss some of the {TSN} features relevant for deterministic communications and evaluate experimentally one of the shaping mechanisms in an exemplary robotic scenario. In particular, and based on our results, we claim that many of the existing real-time industrial solutions will slowly be replaced by {TSN}. And that this will lead towards a unified landscape of physically interoperable robot and robot components.},
	number = {{arXiv}:1804.07643},
	publisher = {{arXiv}},
	author = {Gutiérrez, Carlos San Vicente and Juan, Lander Usategui San and Ugarte, Irati Zamalloa and Vilches, Víctor Mayoral},
	urldate = {2023-04-12},
	date = {2018-09-11},
	eprinttype = {arxiv},
	eprint = {1804.07643 [cs]},
	keywords = {Computer Science - Networking and Internet Architecture, Computer Science - Robotics},
	file = {arXiv Fulltext PDF:/home/manuelm/Zotero/storage/5TWY4GBJ/Gutiérrez et al. - 2018 - Time-Sensitive Networking for robotics.pdf:application/pdf;arXiv.org Snapshot:/home/manuelm/Zotero/storage/QYHSRSCH/1804.html:text/html},
}

@article{agarwal_multi-level_2019,
	title = {Multi-Level Time-Sensitive Networking ({TSN}) Using the Data Distribution Services ({DDS}) for Synchronized Three-Phase Measurement Data Transfer},
	volume = {7},
	issn = {2169-3536},
	doi = {10.1109/ACCESS.2019.2939497},
	abstract = {This paper presents the design and implementation of a Multi-level Time Sensitive Networking ({TSN}) protocol based on a real-time communication platform utilizing Data Distribution Service ({DDS}) middleware for data transfer of synchronous three phase measurement data. To transfer ultra-high three phase measurement samples, the {DDS} open-source protocol is exploited to shape the network's data traffic according to specific Quality of Service ({QoS}) profiles, leading to low packet loss and low latency by synchronizing and prioritizing the data in the network. Meanwhile the {TSN} protocol enables time-synchronization of the measured data by providing a common time reference to all the measurement devices in the network, making the system less expensive, more secure and enabling time-synchronization where acquiring {GPS} signals is a challenge. A software library was developed and used as a central Quality of Service ({QoS}) profile for the {TSN} implementation. The proposed design and implemented real-time simulation prototype presented in this paper takes in consideration diverse scenarios at multiple levels of prioritization including publishers, subscribers, and data packets. This allows granular control and monitoring of the data for traffic shaping, scheduling, and prioritization. The major strength of this protocol lies in the fact that it's not only in real time but it's time-critical too. The simulation prototype implementation was performed using the Real Time Innovation ({RTI}) Connext connectivity framework, custom-built {MATLAB} classes and {DDS} Simulink blocks. Simulation results show that the proposed protocol achieves low latency and high throughput, which makes it a desired option for various communication systems involved in microgrids, smart cities, military applications and potentially other time-critical applications, where {GPS} signals become vulnerable and data transfer needs to be prioritized.},
	pages = {131407--131417},
	journaltitle = {{IEEE} Access},
	author = {Agarwal, Tanushree and Niknejad, Payam and Barzegaran, M. R. and Vanfretti, Luigi},
	date = {2019},
	note = {Conference Name: {IEEE} Access},
	keywords = {Real-time systems, Synchronization, Protocols, Quality of service, Middleware, Data distribution services, Data models, Data transfer, latency, multi-level, network-shaping, power system monitoring, prioritization, quality of service ({QoS}), three-phase measurements, throughput, time-sensitive network ({TSN})},
	file = {IEEE Xplore Full Text PDF:/home/manuelm/Zotero/storage/VZ92XLF3/Agarwal et al. - 2019 - Multi-Level Time-Sensitive Networking (TSN) Using .pdf:application/pdf},
}

@article{arestova_service-oriented_2021,
	title = {A Service-Oriented Real-Time Communication Scheme for {AUTOSAR} Adaptive Using {OPC} {UA} and Time-Sensitive Networking},
	volume = {21},
	rights = {http://creativecommons.org/licenses/by/3.0/},
	issn = {1424-8220},
	url = {https://www.mdpi.com/1424-8220/21/7/2337},
	doi = {10.3390/s21072337},
	abstract = {The transportation industry is facing major challenges that come along with innovative trends like autonomous driving. Due to the growing amount of network participants, smart sensors, and mixed-critical data, scalability and interoperability have become key factors of cost-efficient vehicle engineering. One solution to overcome these challenges is the {AUTOSAR} Adaptive software platform. Its service-oriented communication methodology allows a standardized data exchange that is not bound to a specific middleware protocol. {OPC} {UA} is a communication standard that is well-established in modern industrial automation. In addition to its Client–Server communication pattern, the newly released Publish–Subscribe ({PubSub}) architecture promotes scalability. {PubSub} is designed to work in conjunction with Time-Sensitive Networking ({TSN}), a collection of standards that add real-time aspects to standard Ethernet networks. {TSN} allows services with different requirements to share a single physical network. In this paper, we specify an integration approach of {AUTOSAR} Adaptive, {OPC} {UA}, and {TSN}. It combines the benefits of these three technologies to provide deterministic high-speed communication. Our main contribution is the architecture for the binding between Adaptive Platform and {OPC} {UA}. With a prototypical implementation, we prove that a combination of {OPC} {UA} Client–Server and {PubSub} qualifies as a middleware solution for service-oriented communication in {AUTOSAR}.},
	pages = {2337},
	number = {7},
	journaltitle = {Sensors},
	author = {Arestova, Anna and Martin, Maximilian and Hielscher, Kai-Steffen Jens and German, Reinhard},
	urldate = {2023-04-12},
	date = {2021-01},
	langid = {english},
	note = {Number: 7
Publisher: Multidisciplinary Digital Publishing Institute},
	keywords = {{AUTOSAR} adaptive, {OPC} {UA}, time-sensitive networking, vehicle communication},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/EU8UNDVU/Arestova et al. - 2021 - A Service-Oriented Real-Time Communication Scheme .pdf:application/pdf},
}

@online{noauthor_data_nodate,
	title = {Data Distribution Service ({DDS}) {\textbar} Object Management Group},
	url = {https://www.omg.org/omg-dds-portal/},
	urldate = {2023-04-12},
	file = {Data Distribution Service (DDS) | Object Management Group:/home/manuelm/Zotero/storage/SI8LTDE6/omg-dds-portal.html:text/html},
}

@inproceedings{arbo_comparison_2020,
	title = {Comparison of {KVP} and {RSI} for Controlling {KUKA} Robots Over {ROS}},
	abstract = {In this work, an open-source {ROS} interface based on {KUKAVARPROXY} for control of {KUKA} robots is compared to the commercial closed-source Robot Sensor Interface available from {KUKA}. This comparison looks at the difference in how these two approaches communicate with the {KUKA} robot controller, the response time and tracking delay one can expect with the different interfaces, and the difference in use cases for the two interfaces. The investigations showed that the {KR}16 with {KRC}2 has a 50 ms response time, and {RSI} has a 120 ms tracking delay, with negligible delay caused by the {ROS} communication stack. The results highlight that the commercial inferface is more reliable for feedback control tasks, but the proposed interface gives read and write access to variables on the controller during execution, and can be used for simple motion and tooling control.},
	author = {Arbo, Mathias and Eriksen, Ivar and Sanfilippo, Filippo and Gravdahl, Jan},
	date = {2020-07-11},
	file = {Full Text PDF:/home/manuelm/Zotero/storage/IS6SP4DI/Arbo et al. - 2020 - Comparison of KVP and RSI for Controlling KUKA Rob.pdf:application/pdf},
}

@article{bilancia_overview_2023,
	title = {An Overview of Industrial Robots Control and Programming Approaches},
	volume = {13},
	issn = {2076-3417},
	url = {https://www.mdpi.com/2076-3417/13/4/2582},
	doi = {10.3390/app13042582},
	abstract = {Nowadays, manufacturing plants are required to be ﬂexible to respond quickly to customer demands, adapting production and processes without affecting their efﬁciency. In this context, Industrial Robots ({IRs}) are a primary resource for modern factories due to their versatility which allows the execution of ﬂexible, reconﬁgurable, and zero-defect manufacturing tasks. Even so, the control and programming of the commercially available {IRs} are limiting factors for their effective implementation, especially for dynamic production environments or when complex applications are required. These issues have stimulated the development of new technologies that support more efﬁcient methods for robot control and programming. The goal of this research is to identify and evaluate the main approaches proposed in scientiﬁc papers and by the robotics industry in the last decades. After a critical review of the standard {IR} control schematic, the paper discusses the available control alternatives and summarizes their characteristics, range of applications, and remaining limitations.},
	pages = {2582},
	number = {4},
	journaltitle = {Applied Sciences},
	shortjournal = {Applied Sciences},
	author = {Bilancia, Pietro and Schmidt, Juliana and Raffaeli, Roberto and Peruzzini, Margherita and Pellicciari, Marcello},
	urldate = {2023-04-12},
	date = {2023-02-16},
	langid = {english},
	file = {Bilancia et al. - 2023 - An Overview of Industrial Robots Control and Progr.pdf:/home/manuelm/Zotero/storage/BZTJEM9Z/Bilancia et al. - 2023 - An Overview of Industrial Robots Control and Progr.pdf:application/pdf},
}

@online{noauthor_kukarobotsensorinterface_nodate,
	title = {{KUKA}.{RobotSensorInterface}},
	url = {https://www.kuka.com/en-de/products/robot-systems/software/application-software/kuka_robotsensorinterface},
	abstract = {The {RSI} technology package makes it possible to program sophisticated sensor applications easily, universally and effectively.},
	titleaddon = {{KUKA} {AG}},
	urldate = {2023-04-12},
	langid = {english},
	file = {Snapshot:/home/manuelm/Zotero/storage/ICN2TNVB/kuka_robotsensorinterface.html:text/html},
}

@online{noauthor_welcome_nodate,
	title = {Welcome to the ros2\_control documentation! — {ROS}2\_Control: Rolling Apr 2023 documentation},
	url = {https://control.ros.org/master/index.html},
	urldate = {2023-04-13},
	file = {Welcome to the ros2_control documentation! — ROS2_Control\: Rolling Apr 2023 documentation:/home/manuelm/Zotero/storage/5QN2IT78/index.html:text/html},
}

@unpublished{magyar_ros2_control_the_future_of_ros_control_2021,
	location = {{ROS} World 2021},
	title = {ros2\_control\_The\_future\_of\_ros\_control},
	url = {https://raw.githubusercontent.com/ros-controls/control.ros.org/master/doc/resources/presentations/2021-10_ROS_World_2021-ros2_control_The_future_of_ros_control.pdf},
	abstract = {ros2\_control is a robot-agnostic control framework with a focus on both real-time performance and sharing of controllers. The framework offers controller lifecycle and hardware resource management, as well as abstractions on hardware interfaces.

    Controllers expose {ROS} interfaces for 3rd party solutions to robotics problems like manipulation path planning (moveit2) and autonomous navigation (nav2). The modular design makes it ideal for both research and industrial use. A robot made up of a mobile base and an arm that supports ros2\_control needs no extra code, only a few controller configuration files and it is ready to go.},
	author = {Magyar, Bence and Stogl, Denis},
	urldate = {2023-04-13},
	date = {2021},
	file = {2021-10_ROS_World_2021-ros2_control_The_future_of_ros_control.pdf:/home/manuelm/Zotero/storage/G6KTMX57/2021-10_ROS_World_2021-ros2_control_The_future_of_ros_control.pdf:application/pdf},
}

@unpublished{magyar_getting_started_with_ros2_control_2021,
	title = {Getting\_started\_with\_ros2\_control},
	url = {https://raw.githubusercontent.com/ros-controls/control.ros.org/master/doc/resources/presentations/2021-06_RosConFR_Getting_started_with_ros2_control.pdf},
	abstract = {ros2\_control is a robot-agnostic control framework with a focus on both real-time performance and sharing of controllers. The framework offers controller lifecycle and hardware-resource management, as well as abstractions on hardware interfaces.

    Controllers expose {ROS} interfaces for 3rd party solutions to robotics problems like manipulation path planning (moveit2) and autonomous navigation (the {ROS}2 navigation stack). Hardware components on the other side provide a unified interface for robotic hardware, enabling standardized life-cycle and access management. The modular design makes ros2\_control ideal for both research and industrial use. For example, a robot made up of a mobile base and an arm that supports ros2\_control needs no extra code, only a few controller configuration files, and it is ready to go.

    In this talk, we will discuss concepts of ros2\_control framework compared to ros(1)\_control framework and show examples of their use in the wild.},
	author = {Magyar, Bence and Stogl, Denis},
	urldate = {2023-04-13},
	date = {2021},
	file = {2021-06_RosConFR_Getting_started_with_ros2_control.pdf:/home/manuelm/Zotero/storage/683P8K9E/2021-06_RosConFR_Getting_started_with_ros2_control.pdf:application/pdf},
}
